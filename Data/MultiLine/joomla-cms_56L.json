{"conflicts":[
  {
    "devdecision": "Manual",
    "id": 64991,
    "v2": "<a href=\"<?php echo JFilterOutput::ampReplace($displayData['link']); ?>\"<?php echo $target . $rel . $onclick . $title; ?>> <span class=\"icon-<?php echo $displayData['image']; ?>\" aria-hidden=\"true\"></span> <?php echo $text; ?>",
    "resolution": "<a href=\"<?php echo OutputFilter::ampReplace($displayData['link']); ?>\"<?php echo $target . $rel . $onclick . $title; ?>> <span class=\"<?php echo $displayData['image']; ?>\" aria-hidden=\"true\"></span> <?php echo $text; ?>",
    "conflict": "<a href=\"<?php echo OutputFilter::ampReplace($displayData['link']); ?>\"<?php echo $target . $onclick . $title; ?>> <span class=\"<?php echo $displayData['image']; ?>\" aria-hidden=\"true\"></span> <?php echo $text; ?>"
  },
  {
    "devdecision": "Combination",
    "id": 65247,
    "v2": "use Joomla\\Utilities\\IpHelper;  // Joomla system checks. @ini_set('magic_quotes_runtime', 0);",
    "resolution": "use Joomla\\CMS\\Version; use Joomla\\Utilities\\IpHelper;",
    "conflict": "use Joomla\\CMS\\Version;"
  },
  {
    "devdecision": "Combination",
    "id": 65253,
    "v2": "use Joomla\\Utilities\\IpHelper;  // Joomla system checks. @ini_set('magic_quotes_runtime', 0);",
    "resolution": "use Joomla\\CMS\\Version; use Joomla\\Utilities\\IpHelper;",
    "conflict": "use Joomla\\CMS\\Version;"
  },
  {
    "devdecision": "Version 1",
    "id": 65288,
    "v2": "* @var    integer * @since       1.5 * @deprecated  4.0  Will convert to $default",
    "resolution": "* @var    integer[] * @since  4.0.0",
    "conflict": "* @var    integer[] * @since  4.0.0"
  },
  {
    "devdecision": "Combination",
    "id": 65292,
    "v2": "* @throws  \\Exception * @since   1.5",
    "resolution": "* @throws      \\Exception * @since       1.5 * @deprecated  5.0 Use the MenuFactoryInterface from the container instead",
    "conflict": "* @since       1.5 * @throws      \\Exception * @deprecated  5.0 Use the MenuFactoryInterface from the container instead"
  },
  {
    "devdecision": "Version 1",
    "id": 65465,
    "v2": "JoomlaInstaller.showLoading(); form.installtype.value = \"url\" form.submit(); }; ');",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 65548,
    "v2": "'time' => ($current > $this->previousTime ? '+' : '') . (($current - $this->previousTime) * 1000), 'totalTime' => ($current * 1000), 'memory' => ($currentMem > $this->previousMem ? '+' : '') . ($currentMem - $this->previousMem),",
    "resolution": "'time' => ($current - $this->previousTime) * 1000, 'totalTime' => ($current * 1000), 'memory' => $currentMem - $this->previousMem,",
    "conflict": "'time' => ($current - $this->previousTime) * 1000, 'totalTime' => ($current * 1000), 'memory' => $currentMem - $this->previousMem,"
  },
  {
    "devdecision": "Combination",
    "id": 65554,
    "v2": "* @param   boolean  $useStreams       True to use streams * @param   boolean  $allowUnsafe      Allow the upload of unsafe files * @param   boolean  $safeFileOptions  Options to \\JFilterInput::isSafeFile",
    "resolution": "* @param   boolean  $useStreams       True to use streams * @param   boolean  $allowUnsafe      Allow the upload of unsafe files * @param   boolean  $safeFileOptions  Options to InputFilter::isSafeFile",
    "conflict": "* @param   boolean  $use_streams      True to use streams * @param   boolean  $allow_unsafe     Allow the upload of unsafe files * @param   boolean  $safeFileOptions  Options to InputFilter::isSafeFile"
  },
  {
    "devdecision": "Version 2",
    "id": 65566,
    "v2": "public function open($filename, $mode = 'r', $useIncludePath = false, $context = null, $usePrefix = false, $relative = false, $detectProcessingMode = false)",
    "resolution": "public function open($filename, $mode = 'r', $useIncludePath = false, $context = null, $usePrefix = false, $relative = false, $detectProcessingMode = false)",
    "conflict": "public function open($filename, $mode = 'r', $use_include_path = false, $context = null, $use_prefix = false, $relative = false, $detectprocessingmode = false )"
  },
  {
    "devdecision": "Version 1",
    "id": 65570,
    "v2": "$files = array();  // Detect debug mode if ($detectDebug && Factory::getConfig()->get('debug'))",
    "resolution": "// If not relative and http is not present in filename foreach ($potential as $strip)",
    "conflict": "// If not relative and http is not present in filename foreach ($potential as $strip)"
  },
  {
    "devdecision": "Manual",
    "id": 65590,
    "v2": "public function getUserAgent($suffix = null, $mask = false, $addVersion = true) { if ($suffix === null)",
    "resolution": "public function getUserAgent(string $suffix = '', bool $mask = false, bool $addVersion = true): string { if ($suffix === '')",
    "conflict": "public function getUserAgent(string $component = '', bool $mask = false, bool $addVersion = true): string { if ($component === '')"
  },
  {
    "devdecision": "Version 1",
    "id": 65696,
    "v2": "<input class=\"input_box\" id=\"install_package\" name=\"install_package\" type=\"file\" size=\"57\" /> <input id=\"max_upload_size\" name=\"max_upload_size\" type=\"hidden\" value=\"<?php echo $maxSizeBytes; ?>\" /><br> <?php echo JText::sprintf('JGLOBAL_MAXIMUM_UPLOAD_SIZE_LIMIT', $maxSize); ?>",
    "resolution": "<input class=\"form-control-file\" id=\"install_package\" name=\"install_package\" type=\"file\"> <input id=\"max_upload_size\" name=\"max_upload_size\" type=\"hidden\" value=\"<?php echo $maxSizeBytes; ?>\" /> <small class=\"form-text text-muted\"><?php echo Text::sprintf('JGLOBAL_MAXIMUM_UPLOAD_SIZE_LIMIT', $maxSize); ?></small>",
    "conflict": "<input class=\"form-control-file\" id=\"install_package\" name=\"install_package\" type=\"file\"> <input id=\"max_upload_size\" name=\"max_upload_size\" type=\"hidden\" value=\"<?php echo $maxSizeBytes; ?>\" /> <small class=\"form-text text-muted\"><?php echo Text::sprintf('JGLOBAL_MAXIMUM_UPLOAD_SIZE_LIMIT', $maxSize); ?></small>"
  },
  {
    "devdecision": "Version 1",
    "id": 65759,
    "v2": "JHtml::_('jquery.framework'); JHtml::_('behavior.core');",
    "resolution": "use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\Filter\\OutputFilter;",
    "conflict": "use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\Filter\\OutputFilter;"
  },
  {
    "devdecision": "Combination",
    "id": 65798,
    "v2": "<!--  Feed image  --> <?php if ($params->get('rssimage', 1) && $feed->image) : ?> <img src=\"<?php echo $feed->image->uri; ?>\" alt=\"<?php echo $feed->image->title; ?>\"/>",
    "resolution": "<?php // Feed image ?> <?php if ($params->get('rssimage', 1) && $feed->image) : ?> <img src=\"<?php echo $feed->image->uri; ?>\" alt=\"<?php echo $feed->image->title; ?>\"/>",
    "conflict": "<?php // Feed image ?> <?php if ($params->get('rssimage', 1) && $iUrl) : ?> <img src=\"<?php echo $iUrl; ?>\" alt=\"<?php echo @$iTitle; ?>\">"
  },
  {
    "devdecision": "Concatenation",
    "id": 65801,
    "v2": "// Joomla! 3.9.23 '/.drone.jsonnet',",
    "resolution": "// Joomla 3.10.0 '/libraries/joomla/base/adapter.php', '/libraries/joomla/base/adapterinstance.php',// Joomla! 3.9.23 '/.drone.jsonnet',",
    "conflict": "// Joomla 3.10.0 '/libraries/joomla/base/adapter.php', '/libraries/joomla/base/adapterinstance.php',"
  },
  {
    "devdecision": "Version 1",
    "id": 65814,
    "v2": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article * $var   object   $article                The Article object",
    "resolution": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article. * @var   object   $article                The Article object. * @var   object   $privacyLink            Link to the privacy article or menu item.",
    "conflict": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article. * @var   object   $article                The Article object. * @var   object   $privacyLink            Link to the privacy article or menu item."
  },
  {
    "devdecision": "Concatenation",
    "id": 65896,
    "v2": "// Joomla! 3.9.21 '/.github/SECURITY.md',",
    "resolution": "// Joomla! 3.9.21 '/.github/SECURITY.md',// Joomla 3.10.0 '/libraries/joomla/base/adapter.php', '/libraries/joomla/base/adapterinstance.php',",
    "conflict": "// Joomla 3.10.0 '/libraries/joomla/base/adapter.php', '/libraries/joomla/base/adapterinstance.php',"
  },
  {
    "devdecision": "Version 1",
    "id": 65913,
    "v2": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article * @var   object   $article                The Article object",
    "resolution": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article. * @var   object   $article                The Article object. * @var   object   $privacyLink            Link to the privacy article or menu item.",
    "conflict": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article. * @var   object   $article                The Article object. * @var   object   $privacyLink            Link to the privacy article or menu item."
  },
  {
    "devdecision": "Version 1",
    "id": 65927,
    "v2": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article * $var   object   $article                The Article object",
    "resolution": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article. * @var   object   $article                The Article object. * @var   object   $privacyLink            Link to the privacy article or menu item.",
    "conflict": "* @var   array    $privacyArticle         The Article ID holding the Privacy Article. * @var   object   $article                The Article object. * @var   object   $privacyLink            Link to the privacy article or menu item."
  },
  {
    "devdecision": "Combination",
    "id": 65931,
    "v2": "elseif ($this->type === 'home') { ToolbarHelper::modal('copyModal', 'icon-copy', 'COM_TEMPLATES_BUTTON_COPY_TEMPLATE'); }",
    "resolution": "elseif ($this->type === 'home') { ToolbarHelper::modal('copyModal', 'fas fa-copy', 'COM_TEMPLATES_BUTTON_COPY_TEMPLATE'); }",
    "conflict": "ToolbarHelper::modal('copyModal', 'fas fa-copy', 'COM_TEMPLATES_BUTTON_COPY_TEMPLATE');"
  },
  {
    "devdecision": "Version 1",
    "id": 65951,
    "v2": "$convertedStep1 = 2; $convertedStep2 = 4;  // The first step has to be repeated if it has not been run (converted = 4 in database) $convertedRequired = 5;",
    "resolution": "$rows = $db->loadRowList(0);",
    "conflict": "$rows = $db->loadRowList(0);"
  },
  {
    "devdecision": "Version 1",
    "id": 65959,
    "v2": "$converted = 5; $tmpSchemaChangeItem->queryType = 'UTF8_CONVERSION_UTF8MB4';",
    "resolution": "$rows = $this->db->loadRowList(0);  $tableExists = \\count($rows);",
    "conflict": "$rows = $this->db->loadRowList(0);  $tableExists = \\count($rows);"
  },
  {
    "devdecision": "Manual",
    "id": 65965,
    "v2": "$canEdit    = $user->authorise('core.edit', $this->extension . '.transition.' . $item->id) && !$isCore; $canCheckin = $user->authorise('core.admin', 'com_workflow') || $item->checked_out == $userId || is_null($item->checked_out); $canChange  = $user->authorise('core.edit.state', $this->extension . '.transition.' . $item->id) && $canCheckin && !$isCore; ?>",
    "resolution": "$canEdit    = $user->authorise('core.edit', $this->extension . '.transition.' . $item->id); $canCheckin = $user->authorise('core.admin', 'com_workflow') || $item->checked_out == $user->id || is_null($item->checked_out); $canChange  = $user->authorise('core.edit.state', $this->extension . '.transition.' . $item->id) && $canCheckin;",
    "conflict": "$canEdit    = $user->authorise('core.edit', $this->extension . '.transition.' . $item->id); $canCheckin = $user->authorise('core.admin', 'com_workflow') || $item->checked_out == $user->id || $item->checked_out == 0; $canChange  = $user->authorise('core.edit.state', $this->extension . '.transition.' . $item->id) && $canCheckin; ?>"
  },
  {
    "devdecision": "Combination",
    "id": 65983,
    "v2": "$assoc = Associations::isEnabled();  HTMLHelper::_('script', 'com_content/admin-articles-workflow-buttons.js', ['relative' => true, 'version' => 'auto']);",
    "resolution": "HTMLHelper::_('script', 'com_workflow/admin-items-workflow-buttons.js', ['relative' => true, 'version' => 'auto']);  endif;",
    "conflict": "HTMLHelper::_('script', 'com_workflow/admin-items-workflow-buttons.js', ['relative' => true, 'version' => 'auto']);  endif;"
  },
  {
    "devdecision": "Version 1",
    "id": 65986,
    "v2": "",
    "resolution": "// Check if this function is enabled. if ($context != 'com_content.article') { return true; }",
    "conflict": "// Check if this function is enabled. if ($context != 'com_content.article') { return true; }"
  },
  {
    "devdecision": "Combination",
    "id": 65995,
    "v2": "<th scope=\"col\" class=\"w-10 d-none d-md-table-cell\"> <?php echo HTMLHelper::_('searchtools.sort', 'COM_WORKFLOW_CONDITION', 's.condition', $listDirn, $listOrder); ?> </th> <th scope=\"col\" class=\"w-1 d-none d-md-table-cell\">",
    "resolution": "<th scope=\"col\" class=\"w-1 d-none d-md-table-cell\"> <?php echo HTMLHelper::_('searchtools.sort', 'COM_WORKFLOW_ID', 's.id', $listDirn, $listOrder); ?> </th>",
    "conflict": "<th scope=\"col\" style=\"width:1%\" class=\"d-none d-md-table-cell\">"
  },
  {
    "devdecision": "Combination",
    "id": 66057,
    "v2": "defined('_JEXEC') or die;",
    "resolution": "defined('_JEXEC') or die;  use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\CMS\\Router\\Route;",
    "conflict": "defined('JPATH_BASE') or die;  use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\CMS\\Router\\Route;"
  },
  {
    "devdecision": "Combination",
    "id": 66058,
    "v2": "defined('_JEXEC') or die;",
    "resolution": "defined('_JEXEC') or die;  use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text;",
    "conflict": "defined('JPATH_BASE') or die;  use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text;"
  },
  {
    "devdecision": "Combination",
    "id": 66063,
    "v2": "defined('_JEXEC') or die;",
    "resolution": "defined('_JEXEC') or die;  use Joomla\\CMS\\Filter\\OutputFilter; use Joomla\\CMS\\Language\\Text;",
    "conflict": "defined('JPATH_BASE') or die;  use Joomla\\CMS\\Filter\\OutputFilter; use Joomla\\CMS\\Language\\Text;"
  },
  {
    "devdecision": "Manual",
    "id": 66101,
    "v2": "->render((int) $item->stage_condition, $i, $options, $item->publish_up, $item->publish_down);",
    "resolution": "->render((int) $item->state, $i, $options, $item->publish_up, $item->publish_down); else : echo HTMLHelper::_('jgrid.published', $item->state, $i, 'articles.', $canChange, 'cb', $item->publish_up, $item->publish_down); endif;",
    "conflict": "->render($item->state, $i, $options, $item->publish_up, $item->publish_down);  else : echo HTMLHelper::_('jgrid.published', $item->state, $i, 'articles.', $canChange, 'cb', $item->publish_up, $item->publish_down); endif;"
  },
  {
    "devdecision": "Version 1",
    "id": 66154,
    "v2": "$client = ApplicationHelper::getClientInfo($this->parent->extension->client_id); $short_element = $this->parent->extension->element; $manifestPath = $client->path . '/language/' . $short_element . '/langmetadata.xml';",
    "resolution": "$client                 = ApplicationHelper::getClientInfo($this->parent->extension->client_id); $short_element          = $this->parent->extension->element; $manifestPath           = $client->path . '/language/' . $short_element . '/langmetadata.xml';",
    "conflict": "$client                 = ApplicationHelper::getClientInfo($this->parent->extension->client_id); $short_element          = $this->parent->extension->element; $manifestPath           = $client->path . '/language/' . $short_element . '/langmetadata.xml';"
  },
  {
    "devdecision": "Combination",
    "id": 66209,
    "v2": "/** @var \\Joomla\\CMS\\Application\\CMSApplication $app */ $app = JFactory::getApplication(); $app->allowCache(false);",
    "resolution": "/** @var \\Joomla\\CMS\\Application\\CMSApplication $app */ $app = Factory::getApplication(); $app->allowCache(false);",
    "conflict": "// Reference global application object $app = Factory::getApplication();"
  },
  {
    "devdecision": "Manual",
    "id": 66225,
    "v2": "$path = trim($path);",
    "resolution": "$path = \\trim($path);  if (!\\in_array($path, $paths)) {",
    "conflict": "if (!\\in_array($path, $paths)) { array_unshift($paths, trim($path)); }"
  },
  {
    "devdecision": "Version 1",
    "id": 66312,
    "v2": "JLoader::registerAlias('JCacheStorageMemcache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\MemcacheStorage', '4.0'); JLoader::registerAlias('JCacheStorageRedis',                '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\RedisStorage', '5.0'); JLoader::registerAlias('JCacheStorageWincache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\WincacheStorage', '5.0'); JLoader::registerAlias('JCacheStorageXcache',               '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\XcacheStorage', '4.0');",
    "resolution": "JLoader::registerAlias('JCacheStorageRedis',                '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\RedisStorage', '5.0'); JLoader::registerAlias('JCacheStorageWincache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\WincacheStorage', '5.0');",
    "conflict": "JLoader::registerAlias('JCacheStorageRedis',                '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\RedisStorage', '5.0'); JLoader::registerAlias('JCacheStorageWincache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\WincacheStorage', '5.0');"
  },
  {
    "devdecision": "Version 1",
    "id": 66342,
    "v2": "if (PHP_VERSION_ID < 50400 && get_magic_quotes_gpc() && !is_null($value)) { $value = stripslashes($value); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Combination",
    "id": 66378,
    "v2": "use Joomla\\Utilities\\IpHelper;  \\JLoader::import('joomla.filesystem.file'); \\JLoader::import('joomla.filesystem.folder');",
    "resolution": "use Joomla\\CMS\\Version; use Joomla\\Utilities\\IpHelper;",
    "conflict": "use Joomla\\CMS\\Version;"
  },
  {
    "devdecision": "Version 1",
    "id": 66423,
    "v2": "->delete('#__session') ->where($this->db->quoteName('session_id') . ' = ' . $this->db->quoteBinary($oldSessionId));",
    "resolution": "->delete($this->db->quoteName('#__session')) ->where($this->db->quoteName('session_id') . ' = :sessionid') ->bind(':sessionid', $oldSessionId);",
    "conflict": "->delete($this->db->quoteName('#__session')) ->where($this->db->quoteName('session_id') . ' = :sessionid') ->bind(':sessionid', $oldSessionId);"
  },
  {
    "devdecision": "Manual",
    "id": 66457,
    "v2": "$ownCacheDisabled = $moduleparams->get('owncache') === 0 || $moduleparams->get('owncache') === '0'; $cacheDisabled = $moduleparams->get('cache') === 0 || $moduleparams->get('cache') === '0';  if ($ownCacheDisabled || $cacheDisabled || $conf->get('caching') == 0 || $user->get('id'))",
    "resolution": "$ownCacheDisabled = $moduleparams->get('owncache') === 0 || $moduleparams->get('owncache') === '0'; $cacheDisabled = $moduleparams->get('cache') === 0 || $moduleparams->get('cache') === '0';",
    "conflict": "if ($moduleparams->get('owncache') === 0 || $moduleparams->get('owncache') === '0' || $app->get('caching') == 0 || $user->get('id'))"
  },
  {
    "devdecision": "Version 1",
    "id": 66497,
    "v2": "if ($field->multiple && !empty($value)) { $return = array();",
    "resolution": "// Get the fields for which to postProcess the data. $fields = $this->findFieldsByGroup($group);",
    "conflict": "// Get the fields for which to postProcess the data. $fields = $this->findFieldsByGroup($group);"
  },
  {
    "devdecision": "Manual",
    "id": 66535,
    "v2": "'[URL]'      => JUri::root(), '[TOKENURL]' => JRoute::link('site', 'index.php?option=com_privacy&view=remind&remind_token=' . $token, false, $linkMode, true), '[FORMURL]'  => JRoute::link('site', 'index.php?option=com_privacy&view=remind', false, $linkMode, true),",
    "resolution": "'[URL]'      => Uri::root(), '[TOKENURL]' => Route::link('site', 'index.php?option=com_privacy&view=remind&remind_token=' . $token, false, $linkMode, true), '[FORMURL]'  => Route::link('site', 'index.php?option=com_privacy&view=remind', false, $linkMode, true),",
    "conflict": "'[URL]'      => Uri::root(), '[TOKENURL]' => Route::link('site', 'index.php?option=com_privacy&view=remind&remind_token=' . $token, false, $linkMode), '[FORMURL]'  => Route::link('site', 'index.php?option=com_privacy&view=remind', false, $linkMode),"
  },
  {
    "devdecision": "Combination",
    "id": 66597,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_banners&task=banner.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->name); ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_banners&task=banner.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_banners&task=banner.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66598,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_banners&task=client.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->name); ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_banners&task=client.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_banners&task=client.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66599,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_categories&task=category.edit&id=' . $item->id . '&extension=' . $extension); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->title); ?></a>",
    "resolution": "<?php if ($canEdit || $canEditOwn) : ?> <a href=\"<?php echo Route::_('index.php?option=com_categories&task=category.edit&id=' . $item->id . '&extension=' . $extension); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_categories&task=category.edit&id=' . $item->id . '&extension=' . $extension); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66600,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_contact&task=contact.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->name); ?></a>",
    "resolution": "<?php if ($canEdit || $canEditOwn) : ?> <a href=\"<?php echo Route::_('index.php?option=com_contact&task=contact.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_contact&task=contact.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66601,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_content&task=article.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->title); ?></a>",
    "resolution": "<?php if ($canEdit || $canEditOwn) : ?> <a href=\"<?php echo Route::_('index.php?option=com_content&task=article.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_content&task=article.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66602,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_content&task=article.edit&return=featured&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->title); ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_content&task=article.edit&return=featured&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_content&task=article.edit&return=featured&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66607,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_modules&task=module.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->title); ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_modules&task=module.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_modules&task=module.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66608,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_newsfeeds&task=newsfeed.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->name); ?></a>",
    "resolution": "<?php if ($canEdit || $canEditOwn) : ?> <a href=\"<?php echo Route::_('index.php?option=com_newsfeeds&task=newsfeed.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_newsfeeds&task=newsfeed.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66609,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_plugins&task=plugin.edit&extension_id=' . (int) $item->extension_id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $editIcon; ?><?php echo $item->name; ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_plugins&task=plugin.edit&extension_id=' . (int) $item->extension_id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $item->name; ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_plugins&task=plugin.edit&extension_id=' . (int) $item->extension_id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $item->name; ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66610,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_tags&task=tag.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->title); ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_tags&task=tag.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_tags&task=tag.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->title)); ?>\"> <?php echo $this->escape($item->title); ?></a>"
  },
  {
    "devdecision": "Combination",
    "id": 66612,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a href=\"<?php echo Route::_('index.php?option=com_users&task=note.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($subject)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($subject); ?></a>",
    "resolution": "<?php if ($canEdit) : ?> <a href=\"<?php echo Route::_('index.php?option=com_users&task=note.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($subject)); ?>\"> <?php echo $this->escape($subject); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_users&task=note.edit&id=' . $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($subject)); ?>\"> <?php echo $this->escape($subject); ?></a>"
  },
  {
    "devdecision": "Version 1",
    "id": 66613,
    "v2": "<div class=\"btn-group\"> <button type=\"button\" class=\"btn btn-primary js-stools-btn-filter\"> <?php echo Text::_('JFILTER_OPTIONS'); ?> <span class=\"fa fa-caret-down\" aria-hidden=\"true\"></span> </button> </div>",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 66780,
    "v2": "<?php echo JText::_('PLG_TWOFACTORAUTH_TOTP_STEP2_ALTTEXT') ?> <br /> <div id=\"totp-qrcode\"></div>",
    "resolution": "<?php echo Text::_('PLG_TWOFACTORAUTH_TOTP_STEP2_ALTTEXT') ?> <br> <img src=\"<?php echo $url ?>\" style=\"float: none;\">",
    "conflict": "<?php echo Text::_('PLG_TWOFACTORAUTH_TOTP_STEP2_ALTTEXT') ?> <br> <img src=\"<?php echo $url ?>\" style=\"float: none;\">"
  },
  {
    "devdecision": "None",
    "id": 66795,
    "v2": "<?php if ($item->enabled > 0) : ?> <?php echo HTMLHelper::_('grid.id', $i, $item->id); ?> <?php endif; ?> </td> <td class=\"text-center\">",
    "resolution": "<?php if ($item->enabled > 0) : ?> <?php echo HTMLHelper::_('jgrid.published', $item->published, $i, 'modules.', $canChange, 'cb', $item->publish_up, $item->publish_down); ?>",
    "conflict": "<div class=\"btn-group\">"
  },
  {
    "devdecision": "Version 2",
    "id": 66837,
    "v2": "",
    "resolution": "",
    "conflict": "JLoader::register('ContentHelperRoute', JPATH_BASE . '/components/com_content/helpers/route.php');  $attribs                = []; $attribs['data-toggle'] = 'modal'; $attribs['data-target'] = '#consentModal';"
  },
  {
    "devdecision": "Version 2",
    "id": 66840,
    "v2": "",
    "resolution": "",
    "conflict": "JLoader::register('ContentHelperRoute', JPATH_BASE . '/components/com_content/helpers/route.php');  $attribs                = []; $attribs['data-toggle'] = 'modal'; $attribs['data-target'] = '#termsModal';"
  },
  {
    "devdecision": "Combination",
    "id": 66976,
    "v2": "// Remove the \"_QQ_\" from the equation $line = str_replace('\"_QQ_\"', '', $line);  // Remove any escaped double quotes \\\" from the equation $line = str_replace('\\\"', '', $line);",
    "resolution": "// Remove any escaped double quotes \\\" from the equation $line = str_replace('\\\"', '', $line);",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 66986,
    "v2": "<div id=\"<?php echo $id; ?>\"> <small class=\"form-text text-muted\"> <?php echo htmlspecialchars(($description), ENT_COMPAT, 'UTF-8'); ?> </small> </div>",
    "resolution": "<div id=\"<?php echo $id; ?>\"> <small class=\"form-text text-muted\"> <?php echo htmlspecialchars(($description), ENT_COMPAT, 'UTF-8'); ?>",
    "conflict": "<small id=\"<?php echo $id; ?>\" class=\"form-text text-muted\"><?php echo $description; ?></small>"
  },
  {
    "devdecision": "Manual",
    "id": 66993,
    "v2": "<?php $link = 'index.php?option=com_modules&task=module.add&client_id=' . $this->state->get('client_id', 0) . '&eid=' . $item->extension_id; ?> <?php $name = $this->escape($item->name); ?> <?php $desc = HTMLHelper::_('string.truncate', $this->escape(strip_tags($item->desc)), 200); ?>",
    "resolution": "<?php $link = 'index.php?option=com_modules&task=module.add&client_id=' . $this->state->get('client_id', 0) .  . $this->modalLink .  '&eid=' . $item->extension_id; ?> <?php $name = $this->escape($item->name); ?> <?php $desc = HTMLHelper::_('string.truncate', $this->escape(strip_tags($item->desc)), 200); ?>",
    "conflict": "<?php $link       = 'index.php?option=com_modules&task=module.add' . $this->modalLink . '&eid=' . $item->extension_id; ?> <?php $name       = $this->escape($item->name); ?> <?php $desc       = HTMLHelper::_('string.truncate', $this->escape(strip_tags($item->desc)), 200); ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 67053,
    "v2": "<a class=\"btn btn-mini button btn-success group-add group-add-<?php echo $unique_subform_id; ?>\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"> <span class=\"icon-plus\" aria-hidden=\"true\"></span> </a>",
    "resolution": "<a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"> <span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a>",
    "conflict": "<a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"> <span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a>"
  },
  {
    "devdecision": "Version 1",
    "id": 67073,
    "v2": "$session = Factory::getSession();",
    "resolution": "// Load the logged in user to the application $this->app->loadIdentity($instance);  $session = $this->app->getSession();",
    "conflict": "// Load the logged in user to the application $this->app->loadIdentity($instance);  $session = $this->app->getSession();"
  },
  {
    "devdecision": "Version 1",
    "id": 67160,
    "v2": "<?php $editIcon = $item->checked_out ? '' : '<span class=\"fa fa-pen-square mr-2\" aria-hidden=\"true\"></span>'; ?> <a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_banners&task=client.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $editIcon; ?><?php echo $this->escape($item->name); ?></a>",
    "resolution": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_banners&task=client.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>",
    "conflict": "<a class=\"hasTooltip\" href=\"<?php echo Route::_('index.php?option=com_banners&task=client.edit&id=' . (int) $item->id); ?>\" title=\"<?php echo Text::_('JACTION_EDIT'); ?> <?php echo $this->escape(addslashes($item->name)); ?>\"> <?php echo $this->escape($item->name); ?></a>"
  },
  {
    "devdecision": "Version 2",
    "id": 67199,
    "v2": "HTMLHelper::_('stylesheet', 'bootstrap.css', ['version' => 'auto', 'relative' => true]); HTMLHelper::_('stylesheet', 'fontawesome.css', ['version' => 'auto', 'relative' => true]); HTMLHelper::_('stylesheet', 'template' . ($this->direction === 'rtl' ? '-rtl' : '') . '.css', ['version' => 'auto', 'relative' => true]);",
    "resolution": "HTMLHelper::_('stylesheet', 'bootstrap.css', ['version' => 'auto', 'relative' => true]); HTMLHelper::_('stylesheet', 'fontawesome.css', ['version' => 'auto', 'relative' => true]); HTMLHelper::_('stylesheet', 'template' . ($this->direction === 'rtl' ? '-rtl' : '') . '.css', ['version' => 'auto', 'relative' => true]);",
    "conflict": "HTMLHelper::_('stylesheet', 'bootstrap.min.css', ['version' => 'auto', 'relative' => true]); HTMLHelper::_('stylesheet', 'font-awesome.min.css', ['version' => 'auto', 'relative' => true]); HTMLHelper::_('stylesheet', 'template' . ($this->direction === 'rtl' ? '-rtl' : '') . '.min.css', ['version' => 'auto', 'relative' => true]);"
  },
  {
    "devdecision": "Version 1",
    "id": 67230,
    "v2": "<span class=\"menu-quicktask\"> <?php if ($params->get('menu-quicktask', false)) : ?>",
    "resolution": "<?php if ($params->get('menu-quicktask', false)) : ?> <span class=\"menu-quicktask\">",
    "conflict": "<?php if ($params->get('menu-quicktask', false)) : ?> <span class=\"menu-quicktask\">"
  },
  {
    "devdecision": "Version 1",
    "id": 67278,
    "v2": "if ($params->get('dropdown', 0) && !$params->get('dropdownimage', 1)) { JHtml::_('formbehavior.chosen'); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Combination",
    "id": 67285,
    "v2": "use Joomla\\Utilities\\IpHelper;",
    "resolution": "use Joomla\\CMS\\Factory; use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\CMS\\Plugin\\CMSPlugin;",
    "conflict": "use Joomla\\CMS\\Factory; use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\CMS\\Plugin\\CMSPlugin; use ReCaptcha\\ReCaptcha;"
  },
  {
    "devdecision": "Combination",
    "id": 67286,
    "v2": "$version    = $this->params->get('version', '1.0'); $remoteip   = IpHelper::getIp();",
    "resolution": "$version    = $this->params->get('version', '2.0'); $remoteip   = IpHelper::getIp(); $response   = null; $spam       = false;",
    "conflict": "$version    = $this->params->get('version', '2.0'); $remoteip   = $input->server->get('REMOTE_ADDR', '', 'string'); $response   = null; $spam       = false;"
  },
  {
    "devdecision": "Version 1",
    "id": 67310,
    "v2": "* @codeCoverageIgnore * @since   1.7.0",
    "resolution": "* @return  void * * @since   4.0.0",
    "conflict": "* @return  void * * @since   4.0.0"
  },
  {
    "devdecision": "Version 1",
    "id": 67327,
    "v2": "* @since   1.7.0 * @throws  \\RuntimeException",
    "resolution": "* @since       1.7.0 * @throws      \\RuntimeException * @deprecated  5.0 Use the cache controller factory instead",
    "conflict": "* @since       1.7.0 * @throws      \\RuntimeException * @deprecated  5.0 Use the cache controller factory instead"
  },
  {
    "devdecision": "Version 1",
    "id": 67346,
    "v2": "* @var    \\JConfig * @since  1.7.0",
    "resolution": "* @var         \\JConfig * @since       1.7.0 * @deprecated  5.0  Use the configuration object within the application",
    "conflict": "* @var         \\JConfig * @since       1.7.0 * @deprecated  5.0  Use the configuration object within the application"
  },
  {
    "devdecision": "Version 1",
    "id": 67347,
    "v2": "* @var    Session * @since  1.7.0",
    "resolution": "* @var         Session * @since       1.7.0 * @deprecated  5.0  Use the session service in the DI container",
    "conflict": "* @var         Session * @since       1.7.0 * @deprecated  5.0  Use the session service in the DI container"
  },
  {
    "devdecision": "Version 1",
    "id": 67348,
    "v2": "* @var   Language * @since  1.7.0",
    "resolution": "* @var         Language * @since       1.7.0 * @deprecated  5.0  Use the language service in the DI container",
    "conflict": "* @var         Language * @since       1.7.0 * @deprecated  5.0  Use the language service in the DI container"
  },
  {
    "devdecision": "Version 1",
    "id": 67349,
    "v2": "* @var    \\JDocument * @since  1.7.0",
    "resolution": "* @var         Document * @since       1.7.0 * @deprecated  5.0  Use the document service in the DI container",
    "conflict": "* @var         Document * @since       1.7.0 * @deprecated  5.0  Use the document service in the DI container"
  },
  {
    "devdecision": "Version 1",
    "id": 67352,
    "v2": "* @see     Registry * @since   1.7.0",
    "resolution": "* @see         Registry * @since       1.7.0 * @deprecated  5.0  Use the configuration object within the application.",
    "conflict": "* @see         Registry * @since       1.7.0 * @deprecated  5.0  Use the configuration object within the application."
  },
  {
    "devdecision": "Version 1",
    "id": 67353,
    "v2": "* @see     Session * @since   1.7.0",
    "resolution": "* @see         Session * @since       1.7.0 * @deprecated  5.0  Load the session service from the dependency injection container or via $app->getSession()",
    "conflict": "* @see         Session * @since       1.7.0 * @deprecated  5.0  Load the session service from the dependency injection container or via $app->getSession()"
  },
  {
    "devdecision": "Version 1",
    "id": 67354,
    "v2": "* @see     Language * @since   1.7.0",
    "resolution": "* @see         Language * @since       1.7.0 * @deprecated  5.0  Load the language service from the dependency injection container or via $app->getLanguage()",
    "conflict": "* @see         Language * @since       1.7.0 * @deprecated  5.0  Load the language service from the dependency injection container or via $app->getLanguage()"
  },
  {
    "devdecision": "Version 1",
    "id": 67355,
    "v2": "* @see     \\JDocument * @since   1.7.0",
    "resolution": "* @see         Document * @since       1.7.0 * @deprecated  5.0  Load the document service from the dependency injection container or via $app->getDocument()",
    "conflict": "* @see         Document * @since       1.7.0 * @deprecated  5.0  Load the document service from the dependency injection container or via $app->getDocument()"
  },
  {
    "devdecision": "Version 1",
    "id": 67356,
    "v2": "* @see     User * @since   1.7.0",
    "resolution": "* @see         User * @since       1.7.0 * @deprecated  5.0  Load the user service from the dependency injection container or via $app->getIdentity()",
    "conflict": "* @see         User * @since       1.7.0 * @deprecated  5.0  Load the user service from the dependency injection container or via $app->getIdentity()"
  },
  {
    "devdecision": "Version 1",
    "id": 67357,
    "v2": "* @see     JCache * @since   1.7.0",
    "resolution": "* @see         Cache * @since       1.7.0 * @deprecated  5.0 Use the cache controller factory instead",
    "conflict": "* @see         Cache * @since       1.7.0 * @deprecated  5.0 Use the cache controller factory instead"
  },
  {
    "devdecision": "Version 1",
    "id": 67359,
    "v2": "* @see     \\JDatabaseDriver * @since   1.7.0",
    "resolution": "* @see         DatabaseDriver * @since       1.7.0 * @deprecated  5.0  Load the database service from the dependency injection container",
    "conflict": "* @see         DatabaseDriver * @since       1.7.0 * @deprecated  5.0  Load the database service from the dependency injection container"
  },
  {
    "devdecision": "Version 1",
    "id": 67361,
    "v2": "* @see     Registry * @since   1.7.0",
    "resolution": "* @see         Registry * @since       1.7.0 * @deprecated  5.0  Use the configuration object within the application.",
    "conflict": "* @see         Registry * @since       1.7.0 * @deprecated  5.0  Use the configuration object within the application."
  },
  {
    "devdecision": "Version 1",
    "id": 67363,
    "v2": "* @see     \\JDatabaseDriver * @since   1.7.0",
    "resolution": "* @see         DatabaseDriver * @since       1.7.0 * @deprecated  5.0  Use the database service in the DI container",
    "conflict": "* @see         DatabaseDriver * @since       1.7.0 * @deprecated  5.0  Use the database service in the DI container"
  },
  {
    "devdecision": "Version 1",
    "id": 67364,
    "v2": "* @see     Language * @since   1.7.0",
    "resolution": "* @see         Language * @since       1.7.0 * @deprecated  5.0  Load the language service from the dependency injection container or via $app->getLanguage()",
    "conflict": "* @see         Language * @since       1.7.0 * @deprecated  5.0  Load the language service from the dependency injection container or via $app->getLanguage()"
  },
  {
    "devdecision": "Version 1",
    "id": 67365,
    "v2": "* @see     \\JDocument * @since   1.7.0",
    "resolution": "* @see         Document * @since       1.7.0 * @deprecated  5.0  Load the document service from the dependency injection container or via $app->getDocument()",
    "conflict": "* @see         Document * @since       1.7.0 * @deprecated  5.0  Load the document service from the dependency injection container or via $app->getDocument()"
  },
  {
    "devdecision": "Version 1",
    "id": 67422,
    "v2": "* @return  void * * @since   3.0.1",
    "resolution": "* @since   1.5 * @deprecated  5.0  Load the session service from the dependency injection container or via $app->getSession()",
    "conflict": "* @since   1.5 * @deprecated  5.0  Load the session service from the dependency injection container or via $app->getSession()"
  },
  {
    "devdecision": "Version 1",
    "id": 67501,
    "v2": "'karma.conf.js',",
    "resolution": "'drone-package.json', 'Gemfile', 'Gemfile.lock', 'package.json', 'package-lock.json',",
    "conflict": "'drone-package.json', 'Gemfile', 'Gemfile.lock', 'package.json', 'package-lock.json',"
  },
  {
    "devdecision": "Version 1",
    "id": 67589,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('behavior.core'); JHtml::_('jquery.framework'); JHtml::_('formbehavior.chosen', 'select', null, array('disable_search_threshold' => 0)); JHtml::_('script', 'system/moduleorder.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "HTMLHelper::_('webcomponent', 'system/fields/joomla-field-module-order.min.js', ['version' => 'auto', 'relative' => true]);",
    "conflict": "HTMLHelper::_('webcomponent', 'system/fields/joomla-field-module-order.min.js', ['version' => 'auto', 'relative' => true]);"
  },
  {
    "devdecision": "Version 1",
    "id": 67667,
    "v2": "",
    "resolution": "use Joomla\\CMS\\Factory; use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\CMS\\Plugin\\CMSPlugin; use ReCaptcha\\ReCaptcha;",
    "conflict": "use Joomla\\CMS\\Factory; use Joomla\\CMS\\HTML\\HTMLHelper; use Joomla\\CMS\\Language\\Text; use Joomla\\CMS\\Plugin\\CMSPlugin; use ReCaptcha\\ReCaptcha;"
  },
  {
    "devdecision": "Manual",
    "id": 67708,
    "v2": "$list[1]->liClass = ($limitstart === 0 && $showall === 0) ? 'toclink active' : 'toclink'; $list[1]->class   = $list[1]->liClass; $list[1]->link    = JRoute::_(ContentHelperRoute::getArticleRoute($row->slug, $row->catid, $row->language));",
    "resolution": "$list[1]->liClass = ($limitstart === 0 && $showall === 0) ? 'nav-item toclink active' : 'toclink'; $list[1]->class   = ($limitstart === 0 && $showall === 0) ? 'toclink active' : 'toclink'; $list[1]->link    = Route::_(ContentHelperRoute::getArticleRoute($row->slug, $row->catid, $row->language));",
    "conflict": "$list[1]->liClass = ($limitstart === 0 && $showall === 0) ? 'nav-item toclink active' : 'toclink'; $list[1]->class   = ($limitstart === 0 && $showall === 0) ? 'toclink active' : 'toclink'; $list[1]->link    = Route::_(ContentHelperRoute::getArticleRoute($row->slug, $row->catid, $row->language) . '&showall=&limitstart=');"
  },
  {
    "devdecision": "Version 1",
    "id": 67730,
    "v2": "</div> <jdoc:include type=\"modules\" name=\"title\" /> </div> <div class=\"header-items d-flex ml-auto\"> <jdoc:include type=\"modules\" name=\"status\" />",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 67822,
    "v2": "<h5 class=\"feed-link\"><?php  echo $feed[$i]->title; ?></h5> <?php  endif; ?>",
    "resolution": "<h5 class=\"feed-link\"><?php echo trim($feed[$i]->title); ?></h5> <?php endif; ?>",
    "conflict": "<h5 class=\"feed-link\"><?php echo trim($feed[$i]->title); ?></h5> <?php endif; ?>"
  },
  {
    "devdecision": "Combination",
    "id": 67900,
    "v2": "$layout   = $app->input->getCmd('layout', ''); $task     = $app->input->getCmd('task', ''); $itemid   = $app->input->getCmd('Itemid', ''); $sitename = htmlspecialchars($app->get('sitename'), ENT_QUOTES, 'UTF-8');",
    "resolution": "$layout   = $app->input->getCmd('layout', 'default'); $sitename = htmlspecialchars($app->get('sitename'), ENT_QUOTES, 'UTF-8');",
    "conflict": "$layout   = $app->input->getCmd('layout', 'default'); $sitename = $app->get('sitename');"
  },
  {
    "devdecision": "Version 2",
    "id": 67933,
    "v2": "$element = str_replace(array($mainFolder . DIRECTORY_SEPARATOR, '.xml'), '', $file); $manifestCache = Installer::parseXMLInstallFile($file);",
    "resolution": "$element = str_replace(array($mainFolder . DIRECTORY_SEPARATOR, '.xml'), '', $file); $manifestCache = Installer::parseXMLInstallFile($file);",
    "conflict": "$manifest_details = Installer::parseXMLInstallFile(JPATH_MANIFESTS . '/libraries/' . $file); $file = File::stripExt($file);"
  },
  {
    "devdecision": "Version 1",
    "id": 67950,
    "v2": "JLoader::registerAlias('JCacheStorageMemcache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\MemcacheStorage', '4.0'); JLoader::registerAlias('JCacheStorageRedis',                '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\RedisStorage', '5.0'); JLoader::registerAlias('JCacheStorageWincache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\WincacheStorage', '5.0'); JLoader::registerAlias('JCacheStorageXcache',               '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\XcacheStorage', '4.0');",
    "resolution": "JLoader::registerAlias('JCacheStorageRedis',                '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\RedisStorage', '5.0'); JLoader::registerAlias('JCacheStorageWincache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\WincacheStorage', '5.0');",
    "conflict": "JLoader::registerAlias('JCacheStorageRedis',                '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\RedisStorage', '5.0'); JLoader::registerAlias('JCacheStorageWincache',             '\\\\Joomla\\\\CMS\\\\Cache\\\\Storage\\\\WincacheStorage', '5.0');"
  },
  {
    "devdecision": "Version 1",
    "id": 67969,
    "v2": "* @param   string   $password   The plaintext password to encrypt. * @param   integer  $algorithm  The hashing algorithm to use, represented by `PASSWORD_*` constants. * @param   array    $options    The options for the algorithm to use.",
    "resolution": "* @param   string          $password   The plaintext password to encrypt. * @param   string|integer  $algorithm  The hashing algorithm to use, represented by `HASH_*` class constants, or a container service ID. * @param   array           $options    The options for the algorithm to use.",
    "conflict": "* @param   string          $password   The plaintext password to encrypt. * @param   string|integer  $algorithm  The hashing algorithm to use, represented by `HASH_*` class constants, or a container service ID. * @param   array           $options    The options for the algorithm to use."
  },
  {
    "devdecision": "Version 1",
    "id": 67972,
    "v2": "// If we are using phpass",
    "resolution": "$container         = Factory::getContainer();  // Cheaply try to determine the algorithm in use otherwise fall back to the chained handler",
    "conflict": "$container         = Factory::getContainer();  // Cheaply try to determine the algorithm in use otherwise fall back to the chained handler"
  },
  {
    "devdecision": "Version 2",
    "id": 68028,
    "v2": "",
    "resolution": "",
    "conflict": "if ($query->values) { $db->setQuery($query)->execute(); }"
  },
  {
    "devdecision": "Combination",
    "id": 68055,
    "v2": "'codeception.yml', 'Jenkinsfile', 'jenkins-phpunit.xml', 'RoboFile.php', 'RoboFile.dist.ini', 'CODE_OF_CONDUCT.md',",
    "resolution": "'codeception.yml', 'RoboFile.php', 'CODE_OF_CONDUCT.md',",
    "conflict": ""
  },
  {
    "devdecision": "Combination",
    "id": 68128,
    "v2": "$text = JFilterOutput::stripImages($text); $text = JHtml::_('string.truncate', $text, $params->get('word_count', 0), true, false);",
    "resolution": "$text = OutputFilter::stripImages($text); $text = JHtml::_('string.truncate', $text, $params->get('word_count', 0), true, false);",
    "conflict": "$text = OutputFilter::stripImages($text); // Strip HTML $text = strip_tags($text);"
  },
  {
    "devdecision": "Version 1",
    "id": 68222,
    "v2": "$text = JFilterOutput::stripImages($text); $text = JHtml::_('string.truncate', $text, $params->get('word_count'));",
    "resolution": "$text = OutputFilter::stripImages($text);  $text = HTMLHelper::_('string.truncate', $text, $params->get('word_count'));",
    "conflict": "$text = OutputFilter::stripImages($text);  $text = HTMLHelper::_('string.truncate', $text, $params->get('word_count'));"
  },
  {
    "devdecision": "Version 2",
    "id": 68313,
    "v2": "",
    "resolution": "",
    "conflict": "// Check we have a form. if (!($form instanceof Form)) { throw new RuntimeException(Text::_('JERROR_NOT_A_FORM'), 500); }"
  },
  {
    "devdecision": "Version 2",
    "id": 68325,
    "v2": "",
    "resolution": "",
    "conflict": "if (!($form instanceof Form)) { throw new RuntimeException(Text::_('JERROR_NOT_A_FORM'), 500); }"
  },
  {
    "devdecision": "Manual",
    "id": 68416,
    "v2": "$response->status = JAuthentication::STATUS_FAILURE; $response->error_message = JText::_('JGLOBAL_AUTH_NOT_CONNECT');",
    "resolution": "$response->status = Authentication::STATUS_FAILURE; $response->error_message = Text::_('JGLOBAL_AUTH_NOT_CONNECT');",
    "conflict": "$response->status = Authentication::STATUS_FAILURE; $response->error_message = Text::_('JGLOBAL_AUTH_NO_USER');  return;"
  },
  {
    "devdecision": "Combination",
    "id": 68513,
    "v2": "$syntax = !empty($params['syntax']) ? $params['syntax'] : $this->params->get('syntax', 'html'); $options->mode = isset($this->modeAlias[$syntax]) ? $this->modeAlias[$syntax] : $syntax;",
    "resolution": "$syntax = !empty($params['syntax']) ? $params['syntax'] : $this->params->get('syntax', 'html'); $options->mode = $this->modeAlias[$syntax] ?? $syntax;",
    "conflict": "$syntax = $this->params->get('syntax', 'html'); $options->mode = $this->modeAlias[$syntax] ?? $syntax;"
  },
  {
    "devdecision": "Combination",
    "id": 68597,
    "v2": "// Load and set the dispatcher $this->loadDispatcher();",
    "resolution": "parent::__construct($input, $config, $client);",
    "conflict": "parent::__construct($input, $config, $client);  $this->metadataManager = new MetadataManager($this, Factory::getDbo());"
  },
  {
    "devdecision": "Combination",
    "id": 68638,
    "v2": "$this->metadataManager = new MetadataManager($this, \\JFactory::getDbo());  // Load and set the dispatcher $this->loadDispatcher();",
    "resolution": "parent::__construct($input, $config, $client);  $this->metadataManager = new MetadataManager($this, \\JFactory::getDbo());",
    "conflict": "parent::__construct($input, $config, $client);"
  },
  {
    "devdecision": "Version 1",
    "id": 68647,
    "v2": "// The array with code for each button $tinyBtns[] = implode($tempConstructor, '');",
    "resolution": "// The array with the toolbar buttons $btnsNames[] = $coreButton; }",
    "conflict": "// The array with the toolbar buttons $btnsNames[] = $coreButton; }"
  },
  {
    "devdecision": "Manual",
    "id": 68798,
    "v2": "<input type=\"hidden\" name=\"option\" value=\"com_users\" /> <input type=\"hidden\" name=\"task\" value=\"user.login\" /> <input type=\"hidden\" name=\"return\" value=\"<?php echo $return; ?>\" /> <?php echo JHtml::_('form.token'); ?>",
    "resolution": "<input type=\"hidden\" name=\"option\" value=\"com_users\"> <input type=\"hidden\" name=\"task\" value=\"user.login\"> <input type=\"hidden\" name=\"return\" value=\"<?php echo $return; ?>\"> <?php echo HTMLHelper::_('form.token'); ?>",
    "conflict": "<input type=\"hidden\" name=\"return\" value=\"<?php echo $return; ?>\"> <?php echo HTMLHelper::_('form.token'); ?>"
  },
  {
    "devdecision": "Concatenation",
    "id": 68857,
    "v2": "JText::_('COM_PRIVACY_SUBMENU_CAPABILITIES'), 'index.php?option=com_privacy&view=capabilities', $vName === 'capabilities'",
    "resolution": "JText::_('COM_PRIVACY_SUBMENU_CONSENT'), 'index.php?option=com_privacy&view=consent', $vName === 'consent'JText::_('COM_PRIVACY_SUBMENU_CAPABILITIES'), 'index.php?option=com_privacy&view=capabilities', $vName === 'capabilities'",
    "conflict": "JText::_('COM_PRIVACY_SUBMENU_CONSENT'), 'index.php?option=com_privacy&view=consent', $vName === 'consent'"
  },
  {
    "devdecision": "Version 2",
    "id": 68891,
    "v2": "<link href=\"<?php echo 'administrator/templates/' . $this->template . '/css/bootstrap.min.css'; ?>\" rel=\"stylesheet\"> <link href=\"<?php echo 'administrator/templates/' . $this->template . '/css/font-awesome.min.css'; ?>\" rel=\"stylesheet\"> <link href=\"<?php echo 'administrator/templates/' . $this->template . '/css/template' . ($this->direction === 'rtl' ? '-rtl' : '') . '.min.css'; ?>\" rel=\"stylesheet\">",
    "resolution": "<link href=\"<?php echo 'administrator/templates/' . $this->template . '/css/bootstrap.min.css'; ?>\" rel=\"stylesheet\"> <link href=\"<?php echo 'administrator/templates/' . $this->template . '/css/font-awesome.min.css'; ?>\" rel=\"stylesheet\"> <link href=\"<?php echo 'administrator/templates/' . $this->template . '/css/template' . ($this->direction === 'rtl' ? '-rtl' : '') . '.min.css'; ?>\" rel=\"stylesheet\">",
    "conflict": "<link href=\"<?php echo 'templates/' . $this->template . '/css/bootstrap.css'; ?>\" rel=\"stylesheet\"> <link href=\"<?php echo 'templates/' . $this->template . '/css/font-awesome.css'; ?>\" rel=\"stylesheet\"> <link href=\"<?php echo 'templates/' . $this->template . '/css/template' . ($this->direction === 'rtl' ? '-rtl' : '') . '.css'; ?>\" rel=\"stylesheet\">"
  },
  {
    "devdecision": "Version 2",
    "id": 68898,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Version 2",
    "id": 68899,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Version 2",
    "id": 68901,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Version 2",
    "id": 68902,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\" tabindex=\"0\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\" tabindex=\"0\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn button btn-success\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"fa fa-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn button btn-danger\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"fa fa-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn button btn-primary\" aria-label=\"<?php echo Text::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"fa fa-arrows icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 68985,
    "v2": "* solution! */ $jLanguage = JFactory::getLanguage();",
    "resolution": "* solution! */ $jLanguage = Factory::getLanguage();",
    "conflict": "* solution! */ $jLanguage = Factory::getLanguage();"
  },
  {
    "devdecision": "Combination",
    "id": 68996,
    "v2": "<input type=\"hidden\" name=\"return\" value=\"<?php echo $return; ?>\" /> <?php echo JHtml::_('form.token'); ?>",
    "resolution": "<input type=\"hidden\" name=\"return\" value=\"<?php echo $return; ?>\"> <?php echo HTMLHelper::_('form.token'); ?>",
    "conflict": "<input type=\"hidden\" name=\"option\" value=\"com_users\"> <input type=\"hidden\" name=\"task\" value=\"user.login\"> <input type=\"hidden\" name=\"return\" value=\"<?php echo $return; ?>\"> <?php echo HTMLHelper::_('form.token'); ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 69006,
    "v2": "$reCaptcha = new JReCaptcha($privatekey); $response  = $reCaptcha->verifyResponse($remoteip, $response);  if (!isset($response->success) || !$response->success)",
    "resolution": "if (!$apiResponse->isSuccess())",
    "conflict": "if (!$apiResponse->isSuccess())"
  },
  {
    "devdecision": "Combination",
    "id": 69163,
    "v2": "title=\"<?php echo $ititle; ?>\" class=\"wrapper<?php echo $moduleclass_sfx; ?>\" > <?php echo JText::_('MOD_WRAPPER_NO_IFRAMES'); ?>",
    "resolution": "title=\"<?php echo $ititle; ?>\" class=\"wrapper\"> <?php echo Text::_('MOD_WRAPPER_NO_IFRAMES'); ?>",
    "conflict": "class=\"wrapper\"> <?php echo Text::_('MOD_WRAPPER_NO_IFRAMES'); ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 69224,
    "v2": "'e40631d46120a9c38ea139981f8dab26' => $vendorDir . '/ircmaxell/password-compat/lib/password.php', '5255c38a0faeba867671b61dfda6d864' => $vendorDir . '/paragonie/random_compat/lib/random.php', 'edc6464955a37aa4d5fbf39d40fb6ee7' => $vendorDir . '/symfony/polyfill-php55/bootstrap.php', 'bd9634f2d41831496de0d3dfe4c94881' => $vendorDir . '/symfony/polyfill-php56/bootstrap.php',",
    "resolution": "'0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => $vendorDir . '/symfony/polyfill-mbstring/bootstrap.php', '5255c38a0faeba867671b61dfda6d864' => $vendorDir . '/paragonie/random_compat/lib/random.php',",
    "conflict": "'0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => $vendorDir . '/symfony/polyfill-mbstring/bootstrap.php', '5255c38a0faeba867671b61dfda6d864' => $vendorDir . '/paragonie/random_compat/lib/random.php',"
  },
  {
    "devdecision": "Version 1",
    "id": 69225,
    "v2": "'e40631d46120a9c38ea139981f8dab26' => __DIR__ . '/..' . '/ircmaxell/password-compat/lib/password.php', '5255c38a0faeba867671b61dfda6d864' => __DIR__ . '/..' . '/paragonie/random_compat/lib/random.php', 'edc6464955a37aa4d5fbf39d40fb6ee7' => __DIR__ . '/..' . '/symfony/polyfill-php55/bootstrap.php', 'bd9634f2d41831496de0d3dfe4c94881' => __DIR__ . '/..' . '/symfony/polyfill-php56/bootstrap.php',",
    "resolution": "'0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => __DIR__ . '/..' . '/symfony/polyfill-mbstring/bootstrap.php', '5255c38a0faeba867671b61dfda6d864' => __DIR__ . '/..' . '/paragonie/random_compat/lib/random.php',",
    "conflict": "'0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => __DIR__ . '/..' . '/symfony/polyfill-mbstring/bootstrap.php', '5255c38a0faeba867671b61dfda6d864' => __DIR__ . '/..' . '/paragonie/random_compat/lib/random.php',"
  },
  {
    "devdecision": "Version 1",
    "id": 69248,
    "v2": "* @return  object|false  Instance of class specified by $key with all dependencies injected.",
    "resolution": "* @param   string   $resourceName  The class name to build. * @param   boolean  $shared        True to create a shared resource. * * @return  object|false  Instance of class specified by $resourceName with all dependencies injected.",
    "conflict": "* @param   string   $resourceName  The class name to build. * @param   boolean  $shared        True to create a shared resource. * * @return  object|false  Instance of class specified by $resourceName with all dependencies injected."
  },
  {
    "devdecision": "Version 1",
    "id": 69251,
    "v2": "$key = $this->resolveAlias($key); $raw = $this->getRaw($key);  if ($raw === null)",
    "resolution": "if (isset($this->resources[$key]))",
    "conflict": "if (isset($this->resources[$key]))"
  },
  {
    "devdecision": "Version 1",
    "id": 69265,
    "v2": "* @param mixed $value                  The PHP variable to convert * @param bool  $exceptionOnInvalidType True if an exception must be thrown on invalid types (a PHP resource or object), false otherwise * @param bool  $objectSupport          True if object support is enabled, false otherwise",
    "resolution": "* @param mixed $value The PHP variable to convert * @param int   $flags A bit field of Yaml::DUMP_* constants to customize the dumped YAML string",
    "conflict": "* @param mixed $value The PHP variable to convert * @param int   $flags A bit field of Yaml::DUMP_* constants to customize the dumped YAML string"
  },
  {
    "devdecision": "Version 1",
    "id": 69266,
    "v2": "* @param array $value                  The PHP array to dump * @param bool  $exceptionOnInvalidType True if an exception must be thrown on invalid types (a PHP resource or object), false otherwise * @param bool  $objectSupport          True if object support is enabled, false otherwise",
    "resolution": "* @param array $value The PHP array to dump * @param int   $flags A bit field of Yaml::DUMP_* constants to customize the dumped YAML string",
    "conflict": "* @param array $value The PHP array to dump * @param int   $flags A bit field of Yaml::DUMP_* constants to customize the dumped YAML string"
  },
  {
    "devdecision": "Version 1",
    "id": 69270,
    "v2": "* @param string $value                  A YAML string * @param bool   $exceptionOnInvalidType True if an exception must be thrown on invalid types (a PHP resource or object), false otherwise * @param bool   $objectSupport          True if object support is enabled, false otherwise * @param bool   $objectForMap           True if maps should return a stdClass instead of array()",
    "resolution": "* @param string $value A YAML string * @param int    $flags A bit field of PARSE_* constants to customize the YAML parser behavior",
    "conflict": "* @param string $value A YAML string * @param int    $flags A bit field of PARSE_* constants to customize the YAML parser behavior"
  },
  {
    "devdecision": "Version 1",
    "id": 69278,
    "v2": "// if input is a file, process it $file = ''; if (false === strpos($input, \"\\n\") && is_file($input)) { @trigger_error('The ability to pass file names to the '.__METHOD__.' method is deprecated since version 2.2 and will be removed in 3.0. Pass the YAML contents of the file instead.', E_USER_DEPRECATED);",
    "resolution": "if (is_bool($flags)) { @trigger_error('Passing a boolean flag to toggle exception handling is deprecated since Symfony 3.1 and will be removed in 4.0. Use the PARSE_EXCEPTION_ON_INVALID_TYPE flag instead.', E_USER_DEPRECATED);",
    "conflict": "if (is_bool($flags)) { @trigger_error('Passing a boolean flag to toggle exception handling is deprecated since Symfony 3.1 and will be removed in 4.0. Use the PARSE_EXCEPTION_ON_INVALID_TYPE flag instead.', E_USER_DEPRECATED);"
  },
  {
    "devdecision": "Version 1",
    "id": 69297,
    "v2": "// Because the application instance may not be available on cli script, use it only if needed if (\\JFactory::getApplication()->isClient('administrator')) { \\JError::raiseWarning(500, 'Redis authentication failed'); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 2",
    "id": 69339,
    "v2": "'Symfony\\\\Polyfill\\\\Mbstring\\\\Mbstring' => $vendorDir . '/symfony/polyfill-mbstring/Mbstring.php',",
    "resolution": "'Symfony\\\\Polyfill\\\\Mbstring\\\\Mbstring' => $vendorDir . '/symfony/polyfill-mbstring/Mbstring.php',",
    "conflict": "'Symfony\\\\Polyfill\\\\Php56\\\\Php56' => $vendorDir . '/symfony/polyfill-php56/Php56.php', 'Symfony\\\\Polyfill\\\\Util\\\\Binary' => $vendorDir . '/symfony/polyfill-util/Binary.php', 'Symfony\\\\Polyfill\\\\Util\\\\BinaryNoFuncOverload' => $vendorDir . '/symfony/polyfill-util/BinaryNoFuncOverload.php', 'Symfony\\\\Polyfill\\\\Util\\\\BinaryOnFuncOverload' => $vendorDir . '/symfony/polyfill-util/BinaryOnFuncOverload.php',"
  },
  {
    "devdecision": "Version 2",
    "id": 69342,
    "v2": "'Symfony\\\\Polyfill\\\\Mbstring\\\\Mbstring' => __DIR__ . '/..' . '/symfony/polyfill-mbstring/Mbstring.php',",
    "resolution": "'Symfony\\\\Polyfill\\\\Mbstring\\\\Mbstring' => __DIR__ . '/..' . '/symfony/polyfill-mbstring/Mbstring.php',",
    "conflict": "'Symfony\\\\Polyfill\\\\Php56\\\\Php56' => __DIR__ . '/..' . '/symfony/polyfill-php56/Php56.php', 'Symfony\\\\Polyfill\\\\Util\\\\Binary' => __DIR__ . '/..' . '/symfony/polyfill-util/Binary.php', 'Symfony\\\\Polyfill\\\\Util\\\\BinaryNoFuncOverload' => __DIR__ . '/..' . '/symfony/polyfill-util/BinaryNoFuncOverload.php', 'Symfony\\\\Polyfill\\\\Util\\\\BinaryOnFuncOverload' => __DIR__ . '/..' . '/symfony/polyfill-util/BinaryOnFuncOverload.php',"
  },
  {
    "devdecision": "Version 2",
    "id": 69362,
    "v2": "HTMLHelper::_('script', 'template.js', ['version' => 'auto', 'relative' => true], ['defer' => true]);",
    "resolution": "HTMLHelper::_('script', 'template.js', ['version' => 'auto', 'relative' => true], ['defer' => true]);",
    "conflict": "if ($cpanel) { HTMLHelper::_('script', 'media/vendor/masonry/js/masonry.pkgd.min.js', ['version' => 'auto']); } HTMLHelper::_('script', 'template.js', ['version' => 'auto', 'relative' => true]);"
  },
  {
    "devdecision": "Combination",
    "id": 69379,
    "v2": "* @since 4.0.0 * @throws FileNotFoundException",
    "resolution": "* @return  string * * @since 4.0.0 * @throws \\Exception",
    "conflict": "* @return  string * * @since   __DEPLOY_VERSION__ * @throws  \\Exception"
  },
  {
    "devdecision": "Combination",
    "id": 69382,
    "v2": "* @since 4.0.0 * @throws FileNotFoundException",
    "resolution": "* @return  string * * @since 4.0.0 * @throws \\Exception",
    "conflict": "* @return  string * * @since   __DEPLOY_VERSION__ * @throws  \\Exception"
  },
  {
    "devdecision": "Version 1",
    "id": 69414,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true, 'conditional' => 'lt IE 9'));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 69416,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true, 'conditional' => 'lt IE 9'));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 69421,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-mini button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-mini button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-mini button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Manual",
    "id": 69422,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-mini button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-mini button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-mini button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Manual",
    "id": 69424,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-mini button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-mini button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-mini button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Manual",
    "id": 69425,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-mini button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-mini button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-mini button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_ADD'); ?>\"><span class=\"icon-plus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_REMOVE'); ?>\"><span class=\"icon-minus icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\" aria-label=\"<?php echo JText::_('JGLOBAL_FIELD_MOVE'); ?>\"><span class=\"icon-move icon-white\" aria-hidden=\"true\"></span> </a><?php endif; ?>",
    "conflict": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif; ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 69431,
    "v2": "JLoader::registerAlias('JCryptCipherMcrypt',                '\\\\Joomla\\\\CMS\\\\Crypt\\\\Cipher\\\\McryptCipher', '4.0'); JLoader::registerAlias('JCryptCipherRijndael256',           '\\\\Joomla\\\\CMS\\\\Crypt\\\\Cipher\\\\Rijndael256Cipher', '4.0'); JLoader::registerAlias('JCryptCipherSimple',                '\\\\Joomla\\\\CMS\\\\Crypt\\\\Cipher\\\\SimpleCipher', '4.0'); JLoader::registerAlias('JCryptCipherSodium',                '\\\\Joomla\\\\CMS\\\\Crypt\\\\Cipher\\\\SodiumCipher', '5.0'); JLoader::registerAlias('JCryptCipher3Des',                  '\\\\Joomla\\\\CMS\\\\Crypt\\\\Cipher\\\\TripleDesCipher', '4.0'); JLoader::registerAlias('JCryptPasswordSimple',              '\\\\Joomla\\\\CMS\\\\Crypt\\\\Password\\\\SimpleCryptPassword', '4.0');",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 69433,
    "v2": "$this->extension->params = $this->parent->getParams();  // Custom data $this->extension->custom_data = ''; $this->extension->system_data = '';",
    "resolution": "$this->extension->params    = $this->parent->getParams();",
    "conflict": "$this->extension->params    = $this->parent->getParams();"
  },
  {
    "devdecision": "Manual",
    "id": 69437,
    "v2": "$this->setError($this->table->getError());",
    "resolution": "$this->table->getDispatcher()->dispatch($setTagsEvent); } catch (\\RuntimeException $e) {",
    "conflict": "$table->getDispatcher()->dispatch($setTagsEvent); } catch (\\RuntimeException $e) { $this->setError($e->getMessage());"
  },
  {
    "devdecision": "Version 1",
    "id": 69441,
    "v2": "* @param   string   $password   The plaintext password to encrypt. * @param   integer  $algorithm  The hashing algorithm to use, represented by `PASSWORD_*` constants. * @param   array    $options    The options for the algorithm to use.",
    "resolution": "* @param   string          $password   The plaintext password to encrypt. * @param   string|integer  $algorithm  The hashing algorithm to use, represented by `HASH_*` class constants, or a container service ID. * @param   array           $options    The options for the algorithm to use.",
    "conflict": "* @param   string          $password   The plaintext password to encrypt. * @param   string|integer  $algorithm  The hashing algorithm to use, represented by `HASH_*` class constants, or a container service ID. * @param   array           $options    The options for the algorithm to use."
  },
  {
    "devdecision": "Version 1",
    "id": 69444,
    "v2": "// If we are using phpass",
    "resolution": "$container         = Factory::getContainer();  // Cheaply try to determine the algorithm in use otherwise fall back to the chained handler",
    "conflict": "$container         = Factory::getContainer();  // Cheaply try to determine the algorithm in use otherwise fall back to the chained handler"
  },
  {
    "devdecision": "Combination",
    "id": 69584,
    "v2": "JLoader::registerAlias('JFormFieldModuleOrder',             '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModuleorderField', '5.0'); JLoader::registerAlias('JFormFieldModulePosition',          '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModulepositionField', '5.0');",
    "resolution": "JLoader::registerAlias('JFormFieldMeter',                   '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\MeterField', '5.0'); JLoader::registerAlias('JFormFieldModulelayout',            '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModulelayoutField', '5.0'); JLoader::registerAlias('JFormFieldModuleOrder',             '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModuleorderField', '5.0'); JLoader::registerAlias('JFormFieldModulePosition',          '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModulepositionField', '5.0');",
    "conflict": "JLoader::registerAlias('JFormFieldMeter',                   '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\MeterField', '5.0'); JLoader::registerAlias('JFormFieldModulelayout',            '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModulelayoutField', '5.0'); JLoader::registerAlias('JFormFieldModuleOrder',             '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModuleOrderField', '5.0'); JLoader::registerAlias('JFormFieldModulePosition',          '\\\\Joomla\\\\CMS\\\\Form\\\\Field\\\\ModulePositionField', '5.0');"
  },
  {
    "devdecision": "Version 2",
    "id": 69587,
    "v2": "// Core plugin extensions - sample data array('plugin', 'blog', 'sampledata', 0),",
    "resolution": "// Core plugin extensions - sample data array('plugin', 'blog', 'sampledata', 0),",
    "conflict": "// Core plugin extensions - sampledata array('plugin', 'blog', 'sampledata', 0), array('plugin', 'testing', 'sampledata', 0),"
  },
  {
    "devdecision": "Version 1",
    "id": 69589,
    "v2": "if (!is_callable($function)) { throw new \\InvalidArgumentException('Function not supported', 500); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 69590,
    "v2": "* @param   MVCFactoryInterface  $factory  The factory.",
    "resolution": "* Recognized key values include 'name', 'default_task', 'model_path', and * 'view_path' (this list is not meant to be comprehensive). * @param   MVCFactoryInterface  $factory  The factory. * @param   CmsApplication       $app      The JApplication for the dispatcher * @param   \\JInput              $input    Input",
    "conflict": "* Recognized key values include 'name', 'default_task', 'model_path', and * 'view_path' (this list is not meant to be comprehensive). * @param   MVCFactoryInterface  $factory  The factory. * @param   CmsApplication       $app      The JApplication for the dispatcher * @param   \\JInput              $input    Input"
  },
  {
    "devdecision": "Version 1",
    "id": 69591,
    "v2": "public function __construct($config = array(), MVCFactoryInterface $factory = null) { parent::__construct($config, $factory);",
    "resolution": "public function __construct($config = array(), MVCFactoryInterface $factory = null, $app = null, $input = null) { parent::__construct($config, $factory, $app, $input);",
    "conflict": "public function __construct($config = array(), MVCFactoryInterface $factory = null, $app = null, $input = null) { parent::__construct($config, $factory, $app, $input);"
  },
  {
    "devdecision": "Manual",
    "id": 69595,
    "v2": "* @param   MVCFactoryInterface  $factory  The factory.",
    "resolution": "* Recognized key values include 'name', 'default_task', 'model_path', and * 'view_path' (this list is not meant to be comprehensive). * @param   MVCFactoryInterface  $factory  The factory. * @param   CMSApplication       $app      The JApplication for the dispatcher * @param   \\JInput              $input    Input",
    "conflict": "* Recognized key values include 'name', 'default_task', 'model_path', and * 'view_path' (this list is not meant to be comprehensive). * @param   MVCFactoryInterface  $factory  The factory. * @param   CmsApplication       $app      The JApplication for the dispatcher * @param   \\JInput              $input    Input"
  },
  {
    "devdecision": "Version 1",
    "id": 69596,
    "v2": "public function __construct($config = array(), MVCFactoryInterface $factory = null) { parent::__construct($config, $factory);",
    "resolution": "public function __construct($config = array(), MVCFactoryInterface $factory = null, $app = null, $input = null) { parent::__construct($config, $factory, $app, $input);",
    "conflict": "public function __construct($config = array(), MVCFactoryInterface $factory = null, $app = null, $input = null) { parent::__construct($config, $factory, $app, $input);"
  },
  {
    "devdecision": "Version 1",
    "id": 69604,
    "v2": "// \\JCrypt::hasStrongPasswordSupport() includes a fallback for us in the worst case \\JCrypt::hasStrongPasswordSupport();  return password_hash($password, PASSWORD_BCRYPT);",
    "resolution": "return password_hash($password, PASSWORD_DEFAULT);",
    "conflict": "return password_hash($password, PASSWORD_DEFAULT);"
  },
  {
    "devdecision": "Combination",
    "id": 69629,
    "v2": "use Joomla\\CMS\\MVC\\Controller\\BaseController;",
    "resolution": "use Joomla\\CMS\\Component\\ComponentHelper; use Joomla\\CMS\\MVC\\Controller\\BaseController; use Joomla\\CMS\\Helper\\MediaHelper; use Joomla\\CMS\\Response\\JsonResponse; use Joomla\\Component\\Media\\Administrator\\Adapter\\FileNotFoundException;",
    "conflict": "use Joomla\\CMS\\Component\\ComponentHelper; use Joomla\\CMS\\Controller\\Controller; use Joomla\\CMS\\Helper\\MediaHelper; use Joomla\\CMS\\Response\\JsonResponse; use Joomla\\Component\\Media\\Administrator\\Adapter\\FileNotFoundException;"
  },
  {
    "devdecision": "Combination",
    "id": 69633,
    "v2": "use Joomla\\CMS\\MVC\\View\\HtmlView;",
    "resolution": "use Joomla\\CMS\\Component\\ComponentHelper; use Joomla\\CMS\\Toolbar\\ToolbarHelper; use Joomla\\CMS\\Uri\\Uri; use Joomla\\CMS\\MVC\\View\\HtmlView;",
    "conflict": "use Joomla\\CMS\\Component\\ComponentHelper; use Joomla\\CMS\\Toolbar\\ToolbarHelper; use Joomla\\CMS\\Uri\\Uri; use Joomla\\CMS\\View\\HtmlView;"
  },
  {
    "devdecision": "Combination",
    "id": 69634,
    "v2": "use Joomla\\CMS\\MVC\\View\\HtmlView;",
    "resolution": "use Joomla\\CMS\\Layout\\FileLayout; use Joomla\\CMS\\Toolbar\\Toolbar; use Joomla\\CMS\\Toolbar\\ToolbarHelper; use Joomla\\CMS\\MVC\\View\\HtmlView;",
    "conflict": "use Joomla\\CMS\\Layout\\FileLayout; use Joomla\\CMS\\Toolbar\\Toolbar; use Joomla\\CMS\\Toolbar\\ToolbarHelper; use Joomla\\CMS\\View\\HtmlView;"
  },
  {
    "devdecision": "Manual",
    "id": 69671,
    "v2": "<div class=\"alert\"> <p><?php echo JText::sprintf('INSTL_COMPLETE_REMOVE_INSTALLATION', 'installation'); ?></p> <input type=\"button\" class=\"btn btn-warning\" name=\"instDefault\" onclick=\"Install.removeFolder(this);\" value=\"<?php echo JText::sprintf('INSTL_COMPLETE_REMOVE_FOLDER', 'installation'); ?>\" />",
    "resolution": "<div class=\"alert alert-info\"> <p><?php echo JText::sprintf('INSTL_COMPLETE_REMOVE_INSTALLATION', 'installation'); ?></p> <input type=\"button\" class=\"btn btn-warning\" name=\"instDefault\" onclick=\"Install.removeFolder(this);\" value=\"<?php echo JText::sprintf('INSTL_COMPLETE_REMOVE_FOLDER', 'installation'); ?>\">",
    "conflict": "<div class=\"alert alert-info\"> <p><?php echo JText::_('INSTL_COMPLETE_REMOVE_INSTALLATION'); ?></p> <input type=\"button\" class=\"btn btn-warning\" name=\"instDefault\" onclick=\"Install.removeFolder(this);\" value=\"<?php echo JText::_('INSTL_COMPLETE_REMOVE_FOLDER'); ?>\">"
  },
  {
    "devdecision": "Manual",
    "id": 69678,
    "v2": "<li class=\"previous\"> <a class=\"hasTooltip\" title=\"<?php echo htmlspecialchars($rows[$location-1]->title); ?>\" aria-label=\"<?php echo JText::sprintf('JPREVIOUS_TITLE', htmlspecialchars($rows[$location-1]->title)); ?>\" href=\"<?php echo $row->prev; ?>\" rel=\"prev\"> <?php echo '<span class=\"icon-chevron-' . $direction . '\" aria-hidden=\"true\"></span> <span aria-hidden=\"true\">' . $row->prev_label . '<span>'; ?>",
    "resolution": "<li class=\"previous page-item\"> <a class=\"hasTooltip page-link\" title=\"<?php echo htmlspecialchars($rows[$location-1]->title); ?>\" aria-label=\"<?php echo JText::sprintf('JPREVIOUS_TITLE', htmlspecialchars($rows[$location-1]->title)); ?>\" href=\"<?php echo $row->prev; ?>\" rel=\"prev\"> <?php echo '<span class=\"icon-chevron-' . $direction . '\" aria-hidden=\"true\"></span> <span aria-hidden=\"true\">' . $row->prev_label . '</span>'; ?>",
    "conflict": "<li class=\"previous page-item\"> <a href=\"<?php echo $row->prev; ?>\" class=\"page-link\" rel=\"prev\"> <?php echo '<span class=\"icon-chevron-' . $direction . '\"></span> ' . $row->prev_label; ?>"
  },
  {
    "devdecision": "Manual",
    "id": 69679,
    "v2": "<li class=\"next\"> <a class=\"hasTooltip\" title=\"<?php echo htmlspecialchars($rows[$location+1]->title); ?>\" aria-label=\"<?php echo JText::sprintf('JNEXT_TITLE', htmlspecialchars($rows[$location+1]->title)); ?>\" href=\"<?php echo $row->next; ?>\" rel=\"next\"> <?php echo '<span aria-hidden=\"true\">' . $row->next_label . '</span> <span class=\"icon-chevron-' . $direction . '\" aria-hidden=\"true\"></span>'; ?>",
    "resolution": "<li class=\"next page-item\"> <a class=\"hasTooltip page-link\" title=\"<?php echo htmlspecialchars($rows[$location+1]->title); ?>\" aria-label=\"<?php echo JText::sprintf('JNEXT_TITLE', htmlspecialchars($rows[$location+1]->title)); ?>\" href=\"<?php echo $row->next; ?>\" rel=\"next\"> <?php echo '<span aria-hidden=\"true\">' . $row->next_label . '</span> <span class=\"icon-chevron-' . $direction . '\" aria-hidden=\"true\"></span>'; ?>",
    "conflict": "<li class=\"next page-item\"> <a href=\"<?php echo $row->next; ?>\" class=\"page-link\" rel=\"next\"> <?php echo $row->next_label . ' <span class=\"icon-chevron-' . $direction . '\"></span>'; ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 69736,
    "v2": "// We have to use a JavaScript redirect here because MSIE doesn't play nice with utf-8 URLs. if (($this->client->engine == Web\\WebClient::TRIDENT) && !$this::isAscii($url))",
    "resolution": "// Check if we have a boolean for the status variable for compatability with v1 of the framework // @deprecated 3.0 if (is_bool($status))",
    "conflict": "// Check if we have a boolean for the status variable for compatability with v1 of the framework // @deprecated 3.0 if (is_bool($status))"
  },
  {
    "devdecision": "Version 2",
    "id": 69754,
    "v2": "* @since  1.0",
    "resolution": "* @since  1.0",
    "conflict": "* @package     Joomla.Platform * @subpackage  Image * @since       3.4 * @deprecated  5.0  Use Joomla\\Image\\Filter\\Backgroundfill instead"
  },
  {
    "devdecision": "Version 1",
    "id": 69818,
    "v2": "// Include the module helper classes. JLoader::register('MenusHelper', JPATH_ADMINISTRATOR . '/components/com_menus/helpers/menus.php'); JLoader::register('ModMenuHelper', __DIR__ . '/helper.php'); JLoader::register('JAdminCssMenu', __DIR__ . '/menu.php');",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 2",
    "id": 69823,
    "v2": "$minorVersion = Version::MAJOR_VERSION . '.' . Version::MINOR_VERSION; $namespace    = 'Help' . $minorVersion . ':';",
    "resolution": "$minorVersion = Version::MAJOR_VERSION . '.' . Version::MINOR_VERSION; $namespace    = 'Help' . $minorVersion . ':';",
    "conflict": "$version     = new \\Joomla\\CMS\\Version(); $helpVersion = str_replace('.', '', $version::RELEASE); $namespace   = 'Help' . $helpVersion . ':';"
  },
  {
    "devdecision": "Manual",
    "id": 69825,
    "v2": "$html .= '<div class=\"controls finder-selects\">'; $html .= '<label for=\"tax-' . JFilterOutput::stringURLSafe($bv->title) . '\" class=\"control-label\">';",
    "resolution": "$html .= '<div class=\"control-group\">'; $html .= '<div class=\"control-label\">'; $html .= '<label for=\"tax-' . JFilterOutput::stringURLSafe($bv->title) . '\">';",
    "conflict": "$html .= '<div class=\"control-group\">'; $html .= '<div class=\"control-label\">'; $html .= '<label for=\"tax-' . JFilterOutput::stringUrlSafe($bv->title) . '\">';"
  },
  {
    "devdecision": "Manual",
    "id": 69853,
    "v2": "'Joomla\\\\Filesystem\\\\' => array ( 0 => __DIR__ . '/..' . '/joomla/filesystem/src', ), 'Joomla\\\\Event\\\\Tests\\\\' =>",
    "resolution": "'Joomla\\\\Filter\\\\' => array ( 0 => __DIR__ . '/..' . '/joomla/filter/src', ),",
    "conflict": "'Joomla\\\\Filter\\\\' =>"
  },
  {
    "devdecision": "Version 1",
    "id": 69865,
    "v2": "$db = $this->db;  //  fix  for support custom shutdown function via register_shutdown_function(). $db->disconnect();",
    "resolution": "// Fix for support custom shutdown function via register_shutdown_function(). $this->db->disconnect();",
    "conflict": "// Fix for support custom shutdown function via register_shutdown_function(). $this->db->disconnect();"
  },
  {
    "devdecision": "Version 1",
    "id": 69867,
    "v2": "$timings    = $db->getTimings(); $callStacks = $db->getCallStacks();  $db->setDebug(false);",
    "resolution": "$timings = $this->queryMonitor->getTimings(); $callStacks = $this->queryMonitor->getCallStacks();",
    "conflict": "$timings = $this->queryMonitor->getTimings(); $callStacks = $this->queryMonitor->getCallStacks();"
  },
  {
    "devdecision": "Version 1",
    "id": 69871,
    "v2": "$htmlResultsReturned = '<span class=\"label ' . $labelClass . '\">' . (int) $resultsReturned . '</span>'; $htmlTiming          .= ' <span class=\"dbg-query-rowsnumber\">' . JText::sprintf('PLG_DEBUG_ROWS_RETURNED_BY_QUERY', $htmlResultsReturned) . '</span>';",
    "resolution": "$htmlResultsReturned = '<span class=\"badge ' . $labelClass . '\">' . (int) $resultsReturned . '</span>'; $htmlTiming .= ' <span class=\"dbg-query-rowsnumber\">' . JText::sprintf('PLG_DEBUG_ROWS_RETURNED_BY_QUERY', $htmlResultsReturned) . '</span>';",
    "conflict": "$htmlResultsReturned = '<span class=\"badge ' . $labelClass . '\">' . (int) $resultsReturned . '</span>'; $htmlTiming .= ' <span class=\"dbg-query-rowsnumber\">' . JText::sprintf('PLG_DEBUG_ROWS_RETURNED_BY_QUERY', $htmlResultsReturned) . '</span>';"
  },
  {
    "devdecision": "Version 1",
    "id": 69873,
    "v2": "$db      = $this->db; $log     = $db->getLog(); $timings = $db->getTimings();",
    "resolution": "$log     = $this->queryMonitor->getLog(); $timings = $this->queryMonitor->getTimings();",
    "conflict": "$log     = $this->queryMonitor->getLog(); $timings = $this->queryMonitor->getTimings();"
  },
  {
    "devdecision": "Version 1",
    "id": 69879,
    "v2": "if (!empty($mode)) { $object->setMode($mode); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 69885,
    "v2": "array('HTTP/1.1 303 See other', true, 303), $this->class->headers[1] );  $this->assertEquals(",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 69886,
    "v2": "$this->assertRegexp('/Expires/', $this->class->headers[4][0]);  $this->assertRegexp('/Last-Modified/', $this->class->headers[5][0]);",
    "resolution": "$this->assertRegexp('/Expires/',$this->class->headers[3][0]);  $this->assertRegexp('/Last-Modified/',$this->class->headers[4][0]);",
    "conflict": "$this->assertRegexp('/Expires/',$this->class->headers[3][0]);  $this->assertRegexp('/Last-Modified/',$this->class->headers[4][0]);"
  },
  {
    "devdecision": "Combination",
    "id": 69934,
    "v2": "$checked        = (!$hasValue && $option->checked) ? 'checked' : $checked; $optionClass    = !empty($option->class) ? 'class=\"' . $option->class . '\"' : ''; $optionDisabled = !empty($option->disable) || $disabled ? 'disabled' : '';",
    "resolution": "$checked        = (!$hasValue && $option->checked) ? 'checked' : $checked; $optionClass    = !empty($option->class) ? 'class=\"form-check-input ' . $option->class . '\"' : ' class=\"form-check-input\"'; $optionDisabled = !empty($option->disable) || $disabled ? 'disabled' : '';",
    "conflict": "$checked     = (!$hasValue && $option->checked) ? 'checked' : $checked; $optionClass = !empty($option->class) ? 'class=\"form-check-input ' . $option->class . '\"' : ' class=\"form-check-input\"'; $disabled    = !empty($option->disable) || $disabled ? 'disabled' : '';"
  },
  {
    "devdecision": "Manual",
    "id": 69959,
    "v2": "use Joomla\\Registry\\Registry;",
    "resolution": "use Joomla\\CMS\\Factory; use Joomla\\CMS\\Filter\\InputFilter; use Joomla\\CMS\\Http\\HttpFactory; use Joomla\\CMS\\Log\\Log; use Joomla\\CMS\\Version; use Joomla\\Registry\\Registry;",
    "conflict": "use Joomla\\CMS\\Factory; use Joomla\\CMS\\Filter\\InputFilter; use Joomla\\CMS\\Log\\Log; use Joomla\\CMS\\Version;"
  },
  {
    "devdecision": "Version 2",
    "id": 69967,
    "v2": "",
    "resolution": "",
    "conflict": "// Makes sure we have an event dispatcher if (!is_object($dispatcher)) { $dispatcher = \\JEventDispatcher::getInstance(); }"
  },
  {
    "devdecision": "Version 2",
    "id": 70001,
    "v2": "JHtml::_('stylesheet', 'administrator/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', array('version' => 'auto'));",
    "resolution": "JHtml::_('stylesheet', 'administrator/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', array('version' => 'auto'));",
    "conflict": "JHtml::_('stylesheet', 'administrator/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', ['version' => 'auto']);  // Load custom.css JHtml::_('stylesheet', 'custom.css', ['version' => 'auto', 'relative' => true]);"
  },
  {
    "devdecision": "Concatenation",
    "id": 70004,
    "v2": "'/libraries/legacy/web',",
    "resolution": "// Joomla! 4.0 '/templates/beez3', '/administrator/templates/isis', '/administrator/templates/hathor', '/media/jui/less','/libraries/legacy/web',",
    "conflict": "// Joomla! 4.0 '/templates/beez3', '/administrator/templates/isis', '/administrator/templates/hathor', '/media/jui/less',"
  },
  {
    "devdecision": "Version 2",
    "id": 70044,
    "v2": "JFactory::getDocument()->addScriptOptions('system.keepalive', array('interval' => $refreshTime * 1000, 'uri' => JRoute::_($uri)));",
    "resolution": "JFactory::getDocument()->addScriptOptions('system.keepalive', array('interval' => $refreshTime * 1000, 'uri' => JRoute::_($uri)));",
    "conflict": "$options = array( 'interval' => $refreshTime * 1000, 'uri'      => JRoute::_($uri), ); JFactory::getDocument()->addScriptOptions('system.keepalive', $options);"
  },
  {
    "devdecision": "Version 1",
    "id": 70062,
    "v2": "$expected = \"<div class=\\\"btn-wrapper\\\"  id=\\\"toolbar-test\\\">\\n\" . \"\\t<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { alert(Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')); } else { Joomla.submitbutton(''); }\\\" class=\\\"btn btn-small button-test\\\">\\n\" . \"\\t<span class=\\\"icon-test\\\" aria-hidden=\\\"true\\\"></span>\\n\" . \"\\t</button>\\n\" . \"</div>\\n\";",
    "resolution": "$expected = \"\\n<button id=\\\"toolbar-test\\\" onclick=\\\"if (document.adminForm.boxchecked.value == 0) { Joomla.renderMessages({'error': [Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')]}) } else { Joomla.submitbutton(''); }\\\" class=\\\"btn btn-sm btn-outline-primary\\\">\\n\\t<span class=\\\"icon-test\\\" aria-hidden=\\\"true\\\"></span>\\n\\t</button>\\n\";",
    "conflict": "$expected = \"\\n<button id=\\\"toolbar-test\\\" onclick=\\\"if (document.adminForm.boxchecked.value == 0) { Joomla.renderMessages({'error': [Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')]}) } else { Joomla.submitbutton(''); }\\\" class=\\\"btn btn-sm btn-outline-primary\\\">\\n\\t<span class=\\\"icon-test\\\" aria-hidden=\\\"true\\\"></span>\\n\\t</button>\\n\";"
  },
  {
    "devdecision": "Manual",
    "id": 70082,
    "v2": "if (file_exists($customCss) && filesize($customCss) > 0) { JHtml::_('stylesheet', $customCss, ['version' => 'auto']); }",
    "resolution": "// Load specific language related CSS JHtml::_('stylesheet', 'administrator/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', array('version' => 'auto'));",
    "conflict": "// Load specific language related CSS JHtml::_('stylesheet', ltrim($this->baseurl, '/') . '/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', array('version' => 'auto'));"
  },
  {
    "devdecision": "Manual",
    "id": 70084,
    "v2": "if (file_exists($customCss) && filesize($customCss) > 0) { JHtml::_('stylesheet', $customCss, ['version' => 'auto']); }",
    "resolution": "// Load specific language related CSS JHtml::_('stylesheet', 'administrator/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', array('version' => 'auto'));",
    "conflict": "// Load specific language related CSS JHtml::_('stylesheet', ltrim($this->baseurl, '/') . '/language/' . $lang->getTag() . '/' . $lang->getTag() . '.css', array('version' => 'auto'));"
  },
  {
    "devdecision": "Version 1",
    "id": 70107,
    "v2": "$data->next->link = JRoute::_($params . '&' . $this->prefix . 'limitstart=' . $next); $data->end->base  = $end; $data->end->link  = JRoute::_($params . '&' . $this->prefix . 'limitstart=' . $end);",
    "resolution": "$data->next->link = \\JRoute::_($params . '&' . $this->prefix . 'limitstart=' . $next); $data->end->base = $end; $data->end->link = \\JRoute::_($params . '&' . $this->prefix . 'limitstart=' . $end);",
    "conflict": "$data->next->link = \\JRoute::_($params . '&' . $this->prefix . 'limitstart=' . $next); $data->end->base = $end; $data->end->link = \\JRoute::_($params . '&' . $this->prefix . 'limitstart=' . $end);"
  },
  {
    "devdecision": "Version 1",
    "id": 70110,
    "v2": "$db         = $this->getDbo(); $query      = $db->getQuery(true); $languageId = JHelperContent::getLanguageId($this->core_language);",
    "resolution": "$db = $this->getDbo(); $query = $db->getQuery(true); $languageId = \\JHelperContent::getLanguageId($this->core_language);",
    "conflict": "$db = $this->getDbo(); $query = $db->getQuery(true); $languageId = \\JHelperContent::getLanguageId($this->core_language);"
  },
  {
    "devdecision": "Manual",
    "id": 70414,
    "v2": "$html = '<a href=\"#\" onclick=\"return listItemTask(\\'cb' . $i . '\\',\\'' . $state[1] . '\\')\" class=\"btn btn-micro hasTooltip' . ($value == 1 ? ' active' : '') . '\" title=\"' . JHtml::_('tooltipText', $state[3]) . '\"><span class=\"icon-' . $icon . '\" aria-hidden=\"true\"></span></a>';",
    "resolution": "$html = '<a href=\"#\" onclick=\"return listItemTask(\\'cb' . $i . '\\',\\'' . $state[1] . '\\')\" class=\"btn btn-xs hasTooltip' . ($value == 1 ? ' active' : '') . '\" title=\"' . JHtml::_('tooltipText', $state[3]) . '\"><span class=\"icon-'. $icon . '\" aria-hidden=\"true\"></span></a>';",
    "conflict": "$html = '<a href=\"#\" onclick=\"return listItemTask(\\'cb' . $i . '\\',\\'' . $state[1] . '\\')\" class=\"btn btn-xs hasTooltip' . ($value == 1 ? ' active' : '') . '\" title=\"' . JHtml::_('tooltipText', $state[3]) . '\"><span class=\"icon-'. $icon . '\"></span></a>';"
  },
  {
    "devdecision": "Combination",
    "id": 70415,
    "v2": "$html = '<a href=\"#\" onclick=\"return listItemTask(\\'cb' . $i . '\\',\\'' . $state[1] . '\\')\" class=\"btn btn-micro hasTooltip' . ($value == 1 ? ' active' : '') . '\" title=\"' . JHtml::_('tooltipText', $state[3]) . '\"><span class=\"icon-' . $icon . '\" aria-hidden=\"true\"></span></a>';",
    "resolution": "$html = '<a href=\"#\" onclick=\"return listItemTask(\\'cb' . $i . '\\',\\'' . $state[1] . '\\')\" class=\"tbody-icon hasTooltip' . ($value == 1 ? ' active' : '') . '\" title=\"' . JHtml::_('tooltipText', $state[3]) . '\"><span class=\"icon-'. $icon . '\" aria-hidden=\"true\"></span></a>';",
    "conflict": "$html = '<a href=\"#\" onclick=\"return listItemTask(\\'cb' . $i . '\\',\\'' . $state[1] . '\\')\" class=\"tbody-icon hasTooltip' . ($value == 1 ? ' active' : '') . '\" title=\"' . JHtml::_('tooltipText', $state[3]) . '\"><span class=\"icon-'. $icon . '\"></span></a>';"
  },
  {
    "devdecision": "None",
    "id": 70451,
    "v2": "if ($user->authorise('core.manage', 'com_media')) { $this->addSeparator(); $this->addChild(new JMenuNode(JText::_('MOD_MENU_MEDIA_MANAGER'), 'index.php?option=com_media', 'class:media')); }",
    "resolution": "$this->getParent();",
    "conflict": "$this->addChild(new JMenuNode(JText::_('MOD_MENU_COM_CONTENT_FEATURED'), 'index.php?option=com_content&view=featured'));"
  },
  {
    "devdecision": "Manual",
    "id": 70532,
    "v2": "<button class=\"<?php echo $class; ?>\" data-toggle=\"modal\" data-target=\"#<?php echo $selector; ?>\"> <span class=\"icon-<?php echo $icon; ?>\" aria-hidden=\"true\"></span> <?php echo $text; ?>",
    "resolution": "<button onclick=\"jQuery('#modal_<?php echo $selector; ?>').modal('show')\" class=\"<?php echo $class; ?>\" data-toggle=\"modal\" title=\"<?php echo $text; ?>\"> <span class=\"icon-<?php echo $icon; ?>\" aria-hidden=\"true\"></span><?php echo $text; ?>",
    "conflict": "<button onclick=\"jQuery('#modal_<?php echo $selector; ?>').modal('show')\" class=\"<?php echo $class; ?>\" data-toggle=\"modal\" title=\"<?php echo $text; ?>\"> <span class=\"icon-<?php echo $icon; ?>\"></span><?php echo $text; ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 70574,
    "v2": "* * Copyright (c) 2015 - 2017 Paragon Initiative Enterprises *",
    "resolution": "* * Copyright (c) 2015 - 2016 Paragon Initiative Enterprises *",
    "conflict": "* * Copyright (c) 2015 - 2016 Paragon Initiative Enterprises *"
  },
  {
    "devdecision": "Version 1",
    "id": 70575,
    "v2": "if (!class_exists('COM')) { throw new Error( 'COM does not exist' ); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 2",
    "id": 70615,
    "v2": "$buffer .= sprintf('<img src=\"%s\"%s>', htmlentities($path, ENT_COMPAT, 'UTF-8', true), $class );",
    "resolution": "$buffer .= sprintf('<img src=\"%s\"%s>', htmlentities($path, ENT_COMPAT, 'UTF-8', true), $class );",
    "conflict": "$buffer .= '<img src=\"' . htmlentities($path) . '\"' . $class . '>';"
  },
  {
    "devdecision": "Manual",
    "id": 70622,
    "v2": "$expected = \"<div class=\\\"btn-wrapper\\\"  id=\\\"toolbar-test\\\">\\n\" . \"\\t<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { alert(Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')); } else { Joomla.submitbutton(''); }\\\" class=\\\"btn btn-small\\\">\\n\" . \"\\t<span class=\\\"icon-test\\\" aria-hidden=\\\"true\\\"></span>\\n\" . \"\\t</button>\\n\" . \"</div>\\n\";",
    "resolution": "$expected = \"\\n<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { Joomla.renderMessages({'error': [Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')]}) } else { Joomla.submitbutton(''); }\\\" class=\\\"btn btn-sm btn-outline-primary\\\">\\n\\t<span class=\\\"icon-test\\\" aria-hidden=\\\"true\\\"></span>\\n\\t</button>\\n\";",
    "conflict": "$expected = \"\\n<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { Joomla.renderMessages({'error': [Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')]}) } else { Joomla.submitbutton(''); }\\\" class=\\\"btn btn-sm btn-outline-primary\\\">\\n\\t<span class=\\\"icon-test\\\"></span>\\n\\t</button>\\n\";"
  },
  {
    "devdecision": "Manual",
    "id": 70723,
    "v2": "JLog::add( JText::sprintf('JLIB_INSTALLER_WARNING_UNABLE_TO_INSTALL_CONTENT_LANGUAGE', $siteLanguageManifest['name'], $tableLanguage->getError()), JLog::NOTICE,",
    "resolution": "\\JLog::add( \\JText::sprintf('JLIB_INSTALLER_WARNING_UNABLE_TO_INSTALL_CONTENT_LANGUAGE', $siteLanguageManifest['name'], $tableLanguage->getError()), \\JLog::NOTICE,",
    "conflict": "\\JLog::add( \\JText::sprintf('JLIB_INSTALLER_WARNING_UNABLE_TO_INSTALL_CONTENT_LANGUAGE', $siteLanguageManifest['name'], $tableLanguage->getError()), \\JLog::WARNING,"
  },
  {
    "devdecision": "Version 1",
    "id": 70809,
    "v2": "// Vars only used in hathor. // @deprecated  4.0 To be removed with Hathor $this->levels        = UsersHelperDebug::getLevelsOptions(); $this->components    = UsersHelperDebug::getComponents();",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 70810,
    "v2": "// Vars only used in hathor. // @deprecated  4.0 To be removed with Hathor $this->levels        = UsersHelperDebug::getLevelsOptions(); $this->components    = UsersHelperDebug::getComponents();",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 70811,
    "v2": "<a class='folder-url nowrap' data-id='<?php echo base64_encode($key); ?>' href=''> <span class='icon-folder'>&nbsp;<?php $explodeArray = explode('/', $key); echo $this->escape(end($explodeArray)); ?></span>",
    "resolution": "<a class=\"folder-url nowrap\" data-id=\"<?php echo base64_encode($key); ?>\" href=\"\"> <span class=\"fa-fw fa fa-folder\" aria-hidden=\"true\"></span> <?php $explodeArray = explode('/', $key); echo $this->escape(end($explodeArray)); ?>",
    "conflict": "<a class=\"folder-url nowrap\" data-id=\"<?php echo base64_encode($key); ?>\" href=\"\"> <span class=\"fa-fw fa fa-folder\" aria-hidden=\"true\"></span> <?php $explodeArray = explode('/', $key); echo $this->escape(end($explodeArray)); ?>"
  },
  {
    "devdecision": "Manual",
    "id": 70819,
    "v2": "<a class='folder-url nowrap' data-id='<?php echo base64_encode($key); ?>' href=''> <span class='icon-folder'>&nbsp;<?php $explodeArray = explode('/', $key); echo $this->escape(end($explodeArray)); ?></span>",
    "resolution": "<a class=\"folder-url nowrap\" data-id=\"<?php echo base64_encode($key); ?>\" href=\"\"> <span class=\"fa-fw fa fa-folder\" aria-hidden=\"true\"></span> <?php $explodeArray = explode('/', $key); echo $this->escape(end($explodeArray)); ?>",
    "conflict": "<a class=\"folder-url nowrap\" data-id=\"<?php echo base64_encode($key); ?>\" href=\"\"> <span class=\"fa-fw fa fa-folder\" aria-hidden=\"true\"></span> <?php $explodeArray = explode('/', $key); echo end($explodeArray); ?>"
  },
  {
    "devdecision": "Combination",
    "id": 70823,
    "v2": "$rootClass = $recovery ? 'class:' : null;  // Is com_fields installed and enabled? $comFieldsEnabled = JComponentHelper::isInstalled('com_fields') && JComponentHelper::isEnabled('com_fields');",
    "resolution": "// Is com_fields installed and enabled? $comFieldsEnabled = JComponentHelper::isInstalled('com_fields') && JComponentHelper::isEnabled('com_fields');",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 70854,
    "v2": "<a href=\"#\" class=\"btn js-pstats-btn-allow-always\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_SEND_ALWAYS'); ?></a> <a href=\"#\" class=\"btn js-pstats-btn-allow-once\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_SEND_NOW'); ?></a> <a href=\"#\" class=\"btn js-pstats-btn-allow-never\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_NEVER_SEND'); ?></a>",
    "resolution": "<a href=\"#\" class=\"btn btn-primary js-pstats-btn-allow-always\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_SEND_ALWAYS'); ?></a> <a href=\"#\" class=\"btn btn-primary js-pstats-btn-allow-once\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_SEND_NOW'); ?></a> <a href=\"#\" class=\"btn btn-primary js-pstats-btn-allow-never\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_NEVER_SEND'); ?></a>",
    "conflict": "<a href=\"#\" class=\"btn btn-primary js-pstats-btn-allow-always\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_SEND_ALWAYS'); ?></a> <a href=\"#\" class=\"btn btn-primary js-pstats-btn-allow-once\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_SEND_NOW'); ?></a> <a href=\"#\" class=\"btn btn-primary js-pstats-btn-allow-never\"><?php echo JText::_('PLG_SYSTEM_STATS_BTN_NEVER_SEND'); ?></a>"
  },
  {
    "devdecision": "Version 1",
    "id": 70868,
    "v2": "",
    "resolution": "'minLength'     => $this->minLength, 'minIntegers'     => $this->minIntegers, 'minSymbols'     => $this->minSymbols, 'minUppercase'     => $this->minUppercase, 'minLowercase'     => $this->minLowercase, 'forcePassword'    => $this->force,",
    "conflict": "'minLength'     => $this->minLength, 'minIntegers'     => $this->minIntegers, 'minSymbols'     => $this->minSymbols, 'minUppercase'     => $this->minUppercase, 'minLowercase'     => $this->minLowercase, 'forcePassword'    => $this->force,"
  },
  {
    "devdecision": "Manual",
    "id": 70901,
    "v2": "return '<a href=\"' . JRoute::_('index.php?option=com_users&task=note.add&u_id=' . (int) $userId) . '\" class=\"hasTooltip btn btn-mini\" title=\"' . $title . '\"><span class=\"icon-vcard\" aria-hidden=\"true\"></span><span class=\"hidden-phone\">' . $title . '</span></a>';",
    "resolution": "return '<a href=\"' . JRoute::_('index.php?option=com_users&task=note.add&u_id=' . (int) $userId) . '\" class=\"hasTooltip btn btn-secondary btn-xs\" title=\"' . $title . '\"><span class=\"icon-vcard\" aria-hidden=\"true\">' . '</span><span class=\"hidden-sm-down\">' . $title . '</span></a>';",
    "conflict": "return '<a href=\"' . JRoute::_('index.php?option=com_users&task=note.add&u_id=' . (int) $userId) . '\" class=\"hasTooltip btn btn-secondary btn-xs\" title=\"' . $title . '\"><span class=\"icon-vcard\">' . '</span><span class=\"hidden-sm-down\">' . $title . '</span></a>';"
  },
  {
    "devdecision": "Version 1",
    "id": 70919,
    "v2": ")",
    "resolution": "// Drag and drop specific 'dndEnabled' => $dragdrop, 'dndPath'    => JUri::root() . 'media/editors/tinymce/js/dragdrop/plugin.min.js', )",
    "conflict": "// Drag and drop specific 'dndEnabled' => $dragdrop, 'dndPath'    => JUri::root() . 'media/editors/tinymce/js/dragdrop/plugin.min.js', )"
  },
  {
    "devdecision": "Version 2",
    "id": 70920,
    "v2": "$externalPlugins = array(); $allowImgPaste   = false; $dragdrop        = $this->params->get('drag_drop', 1);",
    "resolution": "$externalPlugins = array(); $allowImgPaste   = false; $dragdrop        = $this->params->get('drag_drop', 1);",
    "conflict": "$allowImgPaste = false; $dragdrop      = $this->params->get('drag_drop', 1);"
  },
  {
    "devdecision": "Manual",
    "id": 71024,
    "v2": "<p class=\"label\"> <?php echo JText::sprintf('PLG_CODEMIRROR_TOGGLE_FULL_SCREEN', $modifier, $params->get('fullScreen', 'F10')); ?> </p>",
    "resolution": "<p class=\"badge badge-default\"> <?php echo JText::sprintf('PLG_CODEMIRROR_TOGGLE_FULL_SCREEN', $modifier, $params->get('fullScreen', 'F10')); ?> </p>",
    "conflict": "<p class=\"badge badge-default\"><?php echo JText::sprintf('PLG_CODEMIRROR_TOGGLE_FULL_SCREEN', $params->get('fullScreen', 'F10')); ?></p>"
  },
  {
    "devdecision": "Combination",
    "id": 71026,
    "v2": "$scriptOptions['toolbar1'] = 'bold italic underline strikethrough | undo redo | bullist numlist | code'; $scriptOptions['plugins']  = $dragDropPlg . ' code';",
    "resolution": "$scriptOptions['toolbar1'] = 'bold italic underline strikethrough | undo redo | bullist numlist | code'; $scriptOptions['plugins']  = ' code'; $scriptOptions['external_plugins']  = $externalPlugins;",
    "conflict": "$scriptOptions['toolbar1'] = 'bold italic underline strikethrough | undo redo | bullist numlist | code | ' . $toolbar5; $scriptOptions['plugins']  = ' code'; $scriptOptions['external_plugins']  = $externalPlugins;"
  },
  {
    "devdecision": "Combination",
    "id": 71027,
    "v2": "$scriptOptions['plugins']  = 'table link code hr charmap autolink lists importcss ' . $dragDropPlg; $scriptOptions['toolbar1'] = $toolbar1;",
    "resolution": "$scriptOptions['plugins']  = 'table link code hr charmap autolink lists importcss '; $scriptOptions['external_plugins']  = $externalPlugins; $scriptOptions['toolbar1'] = $toolbar1;",
    "conflict": "$scriptOptions['plugins']  = 'table link code hr charmap autolink lists importcss '; $scriptOptions['external_plugins']  = $externalPlugins; $scriptOptions['toolbar1'] = $toolbar1 . ' | ' . $toolbar5;"
  },
  {
    "devdecision": "Combination",
    "id": 71116,
    "v2": "</div><!-- /configContent --> <?php else: ?> <div class=\"alert alert-info\"><i class=\"icon-info\"></i> <?php echo JText::_('COM_CONFIG_COMPONENT_NO_CONFIG_FIELDS_MESSAGE'); ?></div> <?php endif; ?>",
    "resolution": "</div> <?php else: ?> <div class=\"alert alert-info\"><i class=\"icon-info\"></i> <?php echo JText::_('COM_CONFIG_COMPONENT_NO_CONFIG_FIELDS_MESSAGE'); ?></div> <?php endif; ?>",
    "conflict": "</div>"
  },
  {
    "devdecision": "Manual",
    "id": 71121,
    "v2": "<button onclick=\"insertPagebreak('<?php echo $this->eName; ?>');\" class=\"btn btn-success pull-right\"> <?php echo JText::_('COM_CONTENT_PAGEBREAK_INSERT_BUTTON'); ?> </button>",
    "resolution": "<button onclick=\"insertPagebreak('<?php echo $this->eName; ?>');\" class=\"btn btn-success pull-xs-right\"> <?php echo JText::_('COM_CONTENT_PAGEBREAK_INSERT_BUTTON'); ?> </button>",
    "conflict": "<button onclick=\"insertPagebreak();\" class=\"btn btn-primary\"><?php echo JText::_('COM_CONTENT_PAGEBREAK_INSERT_BUTTON'); ?></button>"
  },
  {
    "devdecision": "Version 2",
    "id": 71122,
    "v2": "",
    "resolution": "",
    "conflict": "// TODO: This is really dodgy - should change this one day. $eName = JFactory::getApplication()->input->getCmd('e_name'); $eName    = preg_replace('#[^A-Z0-9\\-\\_\\[\\]]#i', '', $eName); $this->document->setTitle(JText::_('COM_CONTENT_PAGEBREAK_DOC_TITLE')); $this->eName = &$eName;"
  },
  {
    "devdecision": "Combination",
    "id": 71124,
    "v2": "<li id=\"<?php echo $target; ?>\" class=\"folder\"> <a href=\"index.php?option=com_media&amp;view=mediaList&amp;tmpl=component&amp;folder=<?php echo $folder['data']->relative; ?>\" target=\"folderframe\" class=\"folder-url\" > <span class=\"icon-folder\"></span>",
    "resolution": "<li id=\"<?php echo $target; ?>\" class=\"folder\"> <a href=\"index.php?option=com_media&amp;view=mediaList&amp;tmpl=component&amp;folder=<?php echo $folder['data']->relative; ?>\" target=\"folderframe\" class=\"folder-url\" > <span class=\"icon-folder-2 float-left\"></span>",
    "conflict": "<li id=\"<?php echo $target; ?>\"> <a href=\"index.php?option=com_media&amp;view=mediaList&amp;tmpl=component&amp;folder=<?php echo $folder['data']->relative; ?>\" target=\"folderframe\"> <span class=\"icon-folder-2 float-left\"></span>"
  },
  {
    "devdecision": "Manual",
    "id": 71168,
    "v2": ". 'class=\"inputbox search-query input-medium\" type=\"search\" size=\"20\" placeholder=\"Search ...\" />' . '<input type=\"hidden\" name=\"task\" value=\"search\" /><input type=\"hidden\" name=\"option\" value=\"com_search\" />' . '<input type=\"hidden\" name=\"Itemid\" value=\"\" /></form></div></div>';",
    "resolution": ". 'class=\"inputbox search-query input-medium\" type=\"search\" size=\"20\" placeholder=\"Search ...\">' . '<input type=\"hidden\" name=\"task\" value=\"search\"><input type=\"hidden\" name=\"option\" value=\"com_search\">' . '<input type=\"hidden\" name=\"Itemid\" value=\"\"></form></div></div>';",
    "conflict": ". 'class=\"inputbox search-query\" type=\"search\" size=\"20\" placeholder=\"Search ...\">' . '<input type=\"hidden\" name=\"task\" value=\"search\"><input type=\"hidden\" name=\"option\" value=\"com_search\">' . '<input type=\"hidden\" name=\"Itemid\" value=\"\"></form></div></div>';"
  },
  {
    "devdecision": "Manual",
    "id": 71192,
    "v2": "<li> <div class=\"menu-links-block\"> <button class=\"btn\" type=\"button\" class=\"jform-rightbtn\" onclick=\"jQuery('.<?php echo $type->menutype; ?>').attr('checked', !jQuery('.<?php echo $type->menutype; ?>').attr('checked'));\">",
    "resolution": "<li class=\"col-md-3\"> <div class=\"thumbnail\"> <button class=\"btn btn-secondary jform-rightbtn\" type=\"button\" onclick=\"jQuery('.<?php echo $type->menutype; ?>').attr('checked', !jQuery('.<?php echo $type->menutype; ?>').attr('checked'));\">",
    "conflict": "<li class=\"col-md-3\"> <div class=\"thumbnail\"> <button class=\"btn btn-secondary\" type=\"button\" class=\"jform-rightbtn\" onclick=\"jQuery('.<?php echo $type->menutype; ?>').attr('checked', !jQuery('.<?php echo $type->menutype; ?>').attr('checked'));\">"
  },
  {
    "devdecision": "Version 2",
    "id": 71199,
    "v2": "if (!isset($this->_item[$pk])) { $result = parent::getItem($pk);",
    "resolution": "if (!isset($this->_item[$pk])) { $result = parent::getItem($pk);",
    "conflict": "// Get the dispatcher and load the content plugins. JPluginHelper::importPlugin('content');"
  },
  {
    "devdecision": "Version 2",
    "id": 71205,
    "v2": "",
    "resolution": "",
    "conflict": "// Get the dispatcher and load the users plugins. JPluginHelper::importPlugin('user');  // Trigger the data preparation event. $results = JFactory::getApplication()->triggerEvent('onContentPrepareData', array('com_users.profile', $this->data));"
  },
  {
    "devdecision": "Combination",
    "id": 71270,
    "v2": "<?php if ($clientId != 1) : ?> <div class=\"row-fluid\"> <div class=\"control-group span6\">",
    "resolution": "<?php if ($clientId != 1) : ?> <div class=\"row\"> <div class=\"form-group col-md-6\">",
    "conflict": "<div class=\"row\"> <div class=\"form-group col-md-6\">"
  },
  {
    "devdecision": "Manual",
    "id": 71281,
    "v2": "static::$items[$key][] = JHtml::_('select.optgroup', $menu->text);",
    "resolution": "$optGroup = new stdClass; $optGroup->value = '<OPTGROUP>'; $optGroup->text = $menu->text; static::$items[$key][] = $optGroup;",
    "conflict": "$optGroup = new stdClass; $optGroup->value = '<OPTGROUP>'; $optGroup->text = $menu->text; static::$items[] = $optGroup;"
  },
  {
    "devdecision": "Manual",
    "id": 71282,
    "v2": "static::$items[$key][] = JHtml::_('select.optgroup', $menu->text);",
    "resolution": "$closeOptGroup = new stdClass; $closeOptGroup->value = '</OPTGROUP>'; $closeOptGroup->text = $menu->text;  static::$items[$key][] = $closeOptGroup;",
    "conflict": "$closeOptGroup = new stdClass; $closeOptGroup->value = '</OPTGROUP>'; $closeOptGroup->text = $menu->text;  static::$items[] = $closeOptGroup;"
  },
  {
    "devdecision": "Manual",
    "id": 71298,
    "v2": "$html = \"<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { alert(Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')); } else { if (confirm('Confirm action?')) { Joomla.submitbutton('article.save'); } }\\\" class=\\\"btn btn-small\\\">\\n\" . \"\\t<span class=\\\"icon-confirm-test\\\"></span>\\n\" . \"\\tConfirm?</button>\\n\";",
    "resolution": "$html = \"<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { alert(Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')); } else { if (confirm('Confirm action?')) { Joomla.submitbutton('article.save'); } }\\\" class=\\\"btn btn-sm btn-outline-danger\\\">\\n\" . \"\\t<span class=\\\"icon-confirm-test\\\"></span>\\n\" . \"\\tConfirm?</button>\\n\";",
    "conflict": "$html = \"<button onclick=\\\"if (document.adminForm.boxchecked.value == 0) { alert(Joomla.JText._('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST')); } else { if (confirm('Confirm action?')) { Joomla.submitbutton('article.save'); } }\\\" class=\\\"btn btn-sm btn-outline-danger\\\">\" . PHP_EOL . \"\\t<span class=\\\"icon-confirm-test\\\"></span>\" . PHP_EOL . \"\\tConfirm?</button>\" . PHP_EOL;"
  },
  {
    "devdecision": "Manual",
    "id": 71299,
    "v2": "$html = \"<button onclick=\\\"Joomla.popupWindow('help/en-GB/JHELP_CONTENT_ARTICLE_MANAGER.html', 'JHELP', 700, 500, 1)\\\" rel=\\\"help\\\" class=\\\"btn btn-small\\\">\\n\" . \"\\t<span class=\\\"icon-question-sign\\\"></span>\\n\" . \"\\tJTOOLBAR_HELP</button>\\n\";",
    "resolution": "$html = \"<button onclick=\\\"Joomla.popupWindow('help/en-GB/JHELP_CONTENT_ARTICLE_MANAGER.html', 'JHELP', 700, 500, 1)\\\" rel=\\\"help\\\" class=\\\"btn btn-outline-info btn-sm\\\">\\n\" . \"\\t<span class=\\\"icon-question-sign\\\"></span>\\n\" . \"\\tJTOOLBAR_HELP</button>\\n\";",
    "conflict": "$html = \"<button onclick=\\\"Joomla.popupWindow('help/en-GB/JHELP_CONTENT_ARTICLE_MANAGER.html', 'JHELP', 700, 500, 1)\\\" rel=\\\"help\\\" class=\\\"btn btn-outline-info btn-sm\\\">\" . PHP_EOL . \"\\t<span class=\\\"icon-question-sign\\\"></span>\" . PHP_EOL . \"\\tJTOOLBAR_HELP</button>\" . PHP_EOL;"
  },
  {
    "devdecision": "Version 1",
    "id": 71317,
    "v2": "$options[] = JHtml::_( 'select.option', '', JHtml::_('tooltip', JText::_('INSTL_SITE_INSTALL_SAMPLE_NONE_DESC'), '', '', JText::_('INSTL_SITE_INSTALL_SAMPLE_NONE'))",
    "resolution": "$options[] = JHtml::_('select.option', '', JHtml::_('tooltip', JText::_('INSTL_SITE_INSTALL_SAMPLE_NONE_DESC'), '', '', JText::_('JNO'))",
    "conflict": "$options[] = JHtml::_('select.option', '', JHtml::_('tooltip', JText::_('INSTL_SITE_INSTALL_SAMPLE_NONE_DESC'), '', '', JText::_('JNO'))"
  },
  {
    "devdecision": "Version 1",
    "id": 71381,
    "v2": "$html[] = '<span class=\"input-append\"><input type=\"text\" ' . $required . ' readonly=\"readonly\" id=\"' . $this->id . '\" value=\"' . $value . '\" ' . $size . $class . ' />'; $html[] = '<a href=\"#menuTypeModal\" role=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" title=\"' . JText::_('JSELECT') . '\">'",
    "resolution": "$html[] = '<span class=\"input-group\"><input type=\"text\" ' . $required . ' readonly=\"readonly\" id=\"' . $this->id . '\" value=\"' . $value . '\"' . $size . $class . ' />'; $html[] = '<span class=\"input-group-btn\"><a href=\"#menuTypeModal\" role=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" title=\"' . JText::_('JSELECT') . '\">'",
    "conflict": "$html[] = '<span class=\"input-group\"><input type=\"text\" ' . $required . ' readonly=\"readonly\" id=\"' . $this->id . '\" value=\"' . $value . '\"' . $size . $class . ' />'; $html[] = '<span class=\"input-group-btn\"><a href=\"#menuTypeModal\" role=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" title=\"' . JText::_('JSELECT') . '\">'"
  },
  {
    "devdecision": "Version 1",
    "id": 71430,
    "v2": "* The PHPMailer Version number. * @var string */ public $Version = '5.2.22';  /**",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 71434,
    "v2": "if (strlen($directory) > 1 && substr($directory, -1) != '/') {",
    "resolution": "if (strlen($basedir) > 1 and substr($basedir, -1) != '/') { $basedir .= '/'; } if (strlen($directory) > 1 and substr($directory, -1) != '/') {",
    "conflict": "if (strlen($basedir) > 1 and substr($basedir, -1) != '/') { $basedir .= '/'; } if (strlen($directory) > 1 and substr($directory, -1) != '/') {"
  },
  {
    "devdecision": "Manual",
    "id": 71439,
    "v2": "$dispatcher = JEventDispatcher::getInstance();",
    "resolution": "/* * On before field prepare * Event allow plugins to modfify the output of the field before it is prepared */ JFactory::getApplication()->triggerEvent('onCustomFieldsBeforePrepareField', array($context, $item, &$field));",
    "conflict": "/* * On before field prepare * Event allow plugins to modfify the output of the field before it is prepared */ JFactory::getApplication()->triggerEvent('onFieldBeforePrepare', array($context, $item, &$field));"
  },
  {
    "devdecision": "Manual",
    "id": 71457,
    "v2": "'bodyHeight'  => '70', 'modalWidth'  => '80', 'footer'      => '<a role=\"button\" class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">' . JText::_('JLIB_HTML_BEHAVIOR_CLOSE') . '</a>',",
    "resolution": "'bodyHeight'  => 70, 'modalWidth'  => 80, 'footer'      => '<a role=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" aria-hidden=\"true\">' . JText::_('JLIB_HTML_BEHAVIOR_CLOSE') . '</a>',",
    "conflict": "'bodyHeight'  => 70, 'modalWidth'  => 80, 'footer'      => '<a role=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" aria-hidden=\"true\">' . JText::_(\"JLIB_HTML_BEHAVIOR_CLOSE\") . '</a>',"
  },
  {
    "devdecision": "Manual",
    "id": 71463,
    "v2": "",
    "resolution": "<?php endif; ?> <div class=\"control-group span6\"> <div class=\"controls\"> <?php echo JHtml::_('batch.tag'); ?>",
    "conflict": "<?php endif; ?> <div class=\"form-group col-md-6\"> <div class=\"controls\"> <?php echo JHtml::_('batch.tag'); ?> </div>"
  },
  {
    "devdecision": "Manual",
    "id": 71466,
    "v2": "'bodyHeight'  => '70', 'modalWidth'  => '80', 'footer'      => '<a role=\"button\" class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">' . JText::_('JLIB_HTML_BEHAVIOR_CLOSE') . '</a>',",
    "resolution": "'bodyHeight'  => 70, 'modalWidth'  => 80, 'footer'      => '<a role=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" aria-hidden=\"true\">' . JText::_('JLIB_HTML_BEHAVIOR_CLOSE') . '</a>',",
    "conflict": "'bodyHeight'  => 70, 'modalWidth'  => 80, 'footer'      => '<a role=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" aria-hidden=\"true\">' . JText::_(\"JLIB_HTML_BEHAVIOR_CLOSE\") . '</a>',"
  },
  {
    "devdecision": "Manual",
    "id": 71471,
    "v2": "",
    "resolution": "<?php if ($published >= 0) : ?> <div class=\"form-group col-md-6\"> <div class=\"controls\"> <?php echo JHtml::_('batch.tag'); ?> </div>",
    "conflict": "<?php endif; ?> <div class=\"form-group col-md-6\"> <div class=\"controls\"> <?php echo JHtml::_('batch.tag'); ?> </div>"
  },
  {
    "devdecision": "Manual",
    "id": 71479,
    "v2": "<td> <?php $buttonText = (isset($this->installedLang[0][$language->code]) || isset($this->installedLang[1][$language->code])) ? 'REINSTALL' : 'INSTALL'; ?> <?php $onclick = 'document.getElementById(\\'install_url\\').value = \\'' . $language->detailsurl . '\\'; Joomla.submitbutton(\\'install.install\\');'; ?> <input type=\"button\" class=\"btn btn-small\" value=\"<?php echo JText::_('COM_INSTALLER_' . $buttonText . '_BUTTON'); ?>\" onclick=\"<?php echo $onclick; ?>\" />",
    "resolution": "<td> <?php $buttonText = (isset($this->installedLang[0][$language->code]) || isset($this->installedLang[1][$language->code])) ? 'REINSTALL' : 'INSTALL'; ?> <?php $onclick = 'document.getElementById(\\'install_url\\').value = \\'' . $language->detailsurl . '\\'; Joomla.submitbutton(\\'install.install\\');'; ?> <input type=\"button\" class=\"btn btn-secondary btn-sm\" value=\"<?php echo JText::_('COM_INSTALLER_' . $buttonText . '_BUTTON'); ?>\" onclick=\"<?php echo $onclick; ?>\" />",
    "conflict": "<td class=\"text-xs-center\"> <?php echo JHtml::_('grid.id', $i, $language->update_id, false, 'cid'); ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 71485,
    "v2": "<a href=\"#\" id=\"thumbs\" onclick=\"MediaManager.setViewType('thumbs')\" class=\"btn <?php echo ($style == 'thumbs') ? 'active' : ''; ?>\"> <span class=\"icon-grid-view-2\"></span> <?php echo JText::_('COM_MEDIA_THUMBNAIL_VIEW'); ?></a> <a href=\"#\" id=\"details\" onclick=\"MediaManager.setViewType('details')\" class=\"btn <?php echo ($style == 'details') ? 'active' : ''; ?>\">",
    "resolution": "<a href=\"#\" id=\"thumbs\" onclick=\"MediaManager.setViewType('thumbs')\" class=\"btn btn-secondary<?php echo ($style == 'thumbs') ? ' active' : ''; ?>\"> <span class=\"icon-grid-view-2\"></span> <?php echo JText::_('COM_MEDIA_THUMBNAIL_VIEW'); ?></a> <a href=\"#\" id=\"details\" onclick=\"MediaManager.setViewType('details')\" class=\"btn btn-secondary<?php echo ($style == 'details') ? ' active' : ''; ?>\">",
    "conflict": "<a href=\"#\" id=\"thumbs\" onclick=\"MediaManager.setViewType('thumbs')\" class=\"btn btn-secondary<?php echo ($style == 'thumbs') ? ' active' : ''; ?>\"> <span class=\"icon-grid-view-2\"></span> <?php echo JText::_('COM_MEDIA_THUMBNAIL_VIEW'); ?></a> <a href=\"#\" id=\"details\" onclick=\"MediaManager.setViewType('details')\" class=\"btn btn-secondary<?php echo ($style == 'details') ? ' active' : ''; ?>\">"
  },
  {
    "devdecision": "Combination",
    "id": 71490,
    "v2": "",
    "resolution": "<?php endif; ?>",
    "conflict": "<?php else : ?> <div class=\"row\"> <p><?php echo JText::_('COM_MENUS_SELECT_MENU_FIRST'); ?></p> </div> <?php endif; ?>"
  },
  {
    "devdecision": "Manual",
    "id": 71505,
    "v2": "",
    "resolution": "<?php if ($published >= 0) : ?> <div class=\"form-group col-md-6\"> <div class=\"controls\"> <?php echo JHtml::_('batch.tag'); ?> </div>",
    "conflict": "<?php endif; ?> <div class=\"form-group col-md-6\"> <div class=\"controls\"> <?php echo JHtml::_('batch.tag'); ?> </div>"
  },
  {
    "devdecision": "Version 1",
    "id": 71508,
    "v2": "<td class=\"center btns\"> <a class=\"badge <?php if ($item->returns > 0) echo 'badge-success'; ?>\" target=\"_blank\" href=\"<?php echo JUri::root(); ?>index.php?option=com_search&amp;view=search&amp;searchword=<?php echo JFilterOutput::stringURLSafe($item->search_term); ?>\">",
    "resolution": "<td class=\"text-xs-center btns\"> <a class=\"tag <?php echo $item->returns > 0 ? ' tag-success' : ' tag-default'; ?>\" target=\"_blank\" href=\"<?php echo JUri::root(); ?>index.php?option=com_search&amp;view=search&amp;searchword=<?php echo JFilterOutput::stringURLSafe($item->search_term); ?>\">",
    "conflict": "<td class=\"text-xs-center btns\"> <a class=\"tag <?php echo $item->returns > 0 ? ' tag-success' : ' tag-default'; ?>\" target=\"_blank\" href=\"<?php echo JUri::root(); ?>index.php?option=com_search&amp;view=search&amp;searchword=<?php echo JFilterOutput::stringURLSafe($item->search_term); ?>\">"
  },
  {
    "devdecision": "Combination",
    "id": 71539,
    "v2": "$columns ?: '', $rows ?: '', !empty($class) ? 'class=\"' . $class . '\"' : '',",
    "resolution": "$columns ?: '', $rows ?: '', !empty($class) ? 'class=\"form-control ' . $class . '\"' : 'class=\"form-control\"',",
    "conflict": "$columns ? $columns : '', $rows ? $rows : '', !empty($class) ? 'class=\"form-control ' . $class . '\"' : 'class=\"form-control\"',"
  },
  {
    "devdecision": "Combination",
    "id": 71574,
    "v2": "'version'               => $version->getLongVersion(), 'platform'              => $platform->getLongVersion(), 'useragent'             => isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '',",
    "resolution": "'version'               => (new JVersion)->getLongVersion(), 'useragent'             => isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '',",
    "conflict": "'version'               => (new JVersion)->getLongVersion(), 'useragent'             => isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : \"\","
  },
  {
    "devdecision": "Combination",
    "id": 71588,
    "v2": "$dispatcher = JEventDispatcher::getInstance();  $dispatcher->trigger('onContentPrepare', array ('com_tags.tag', &$itemElement, &$itemElement->core_params, 0));",
    "resolution": "JFactory::getApplication()->triggerEvent('onContentPrepare', ['com_tags.tag', &$itemElement, &$itemElement->core_params, 0]);  $results = JFactory::getApplication()->triggerEvent('onContentAfterTitle', ['com_tags.tag', &$itemElement, &$itemElement->core_params, 0]);",
    "conflict": "JPluginHelper::importPlugin('content'); JFactory::getApplication()->triggerEvent('onContentPrepare', ['com_tags.tag', &$itemElement, &$itemElement->core_params, 0]);"
  },
  {
    "devdecision": "Version 1",
    "id": 71629,
    "v2": "if ($app->isClient('administrator')) { JError::raiseWarning(500, 'Redis authentication failed'); }",
    "resolution": "static::$_redis = null;",
    "conflict": "static::$_redis = null;"
  },
  {
    "devdecision": "Version 1",
    "id": 71637,
    "v2": "'e40631d46120a9c38ea139981f8dab26' => $vendorDir . '/ircmaxell/password-compat/lib/password.php', 'edc6464955a37aa4d5fbf39d40fb6ee7' => $vendorDir . '/symfony/polyfill-php55/bootstrap.php', '5255c38a0faeba867671b61dfda6d864' => $vendorDir . '/paragonie/random_compat/lib/random.php',",
    "resolution": "'5255c38a0faeba867671b61dfda6d864' => $vendorDir . '/paragonie/random_compat/lib/random.php', 'e40631d46120a9c38ea139981f8dab26' => $vendorDir . '/ircmaxell/password-compat/lib/password.php', 'edc6464955a37aa4d5fbf39d40fb6ee7' => $vendorDir . '/symfony/polyfill-php55/bootstrap.php',",
    "conflict": "'5255c38a0faeba867671b61dfda6d864' => $vendorDir . '/paragonie/random_compat/lib/random.php', 'e40631d46120a9c38ea139981f8dab26' => $vendorDir . '/ircmaxell/password-compat/lib/password.php', 'edc6464955a37aa4d5fbf39d40fb6ee7' => $vendorDir . '/symfony/polyfill-php55/bootstrap.php',"
  },
  {
    "devdecision": "Version 1",
    "id": 71644,
    "v2": "'Psr\\\\Log\\\\' =>",
    "resolution": "'PHPMailer\\\\PHPMailer\\\\' => array ( 0 => __DIR__ . '/..' . '/phpmailer/phpmailer/src', ), 'Joomla\\\\Utilities\\\\Tests\\\\' =>",
    "conflict": "'PHPMailer\\\\PHPMailer\\\\' => array ( 0 => __DIR__ . '/..' . '/phpmailer/phpmailer/src', ), 'Joomla\\\\Utilities\\\\Tests\\\\' =>"
  },
  {
    "devdecision": "Version 1",
    "id": 71708,
    "v2": "* The PHPMailer Version number. * @var string */ public $Version = '5.2.21';  /**",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 71711,
    "v2": "//Can't use additional_parameters in safe_mode, calling mail() with null params breaks //@link http://php.net/manual/en/function.mail.php if (ini_get('safe_mode') or !$this->UseSendmailOptions or is_null($params)) {",
    "resolution": "if (!$this->UseSendmailOptions) {",
    "conflict": "if (!$this->UseSendmailOptions) {"
  },
  {
    "devdecision": "Version 1",
    "id": 71720,
    "v2": "//change to quoted-printable transfer encoding for the body part only if ('base64' != $this->Encoding and self::hasLineLongerThanMax($this->Body)) {",
    "resolution": "//change to quoted-printable transfer encoding if ('base64' != $this->Encoding and static::hasLineLongerThanMax($this->Body)) { $this->Encoding = 'quoted-printable';",
    "conflict": "//change to quoted-printable transfer encoding if ('base64' != $this->Encoding and static::hasLineLongerThanMax($this->Body)) { $this->Encoding = 'quoted-printable';"
  },
  {
    "devdecision": "Manual",
    "id": 71747,
    "v2": "$this->assertEquals($expected, (string) $uri); }",
    "resolution": "$uri = new JUri('index.php'); $this->object->buildRewrite($this->object, $uri); $this->assertEquals('', $uri->getPath()); $this->assertEquals($expected, (string) $uri);",
    "conflict": "$uri = new JUri('index.php'); $this->object->buildRewrite($this->object, $uri); $this->assertEquals('', $uri->getPath());"
  },
  {
    "devdecision": "Version 1",
    "id": 71748,
    "v2": "$this->assertInstanceOf('JUri', $uri); $this->assertEquals($expected, (string) $uri);",
    "resolution": "$uri = new JUri('index.php'); $this->assertEquals('index.php', $uri->getPath()); $this->object->buildBase($this->object, $uri); $this->assertEquals(JUri::base(true) . '/' . 'index.php', $uri->getPath());",
    "conflict": "$uri = new JUri('index.php'); $this->assertEquals('index.php', $uri->getPath()); $this->object->buildBase($this->object, $uri); $this->assertEquals(JUri::base(true) . '/' . 'index.php', $uri->getPath());"
  },
  {
    "devdecision": "Manual",
    "id": 71800,
    "v2": "<th class=\"hidden-phone\"> <?php echo JHtml::_('searchtools.sort', 'COM_INSTALLER_HEADING_PACKAGE_ID', 'package_id', $listDirn, $listOrder); ?> </th> <th width=\"1%\" class=\"nowrap hidden-phone\">",
    "resolution": "<th class=\"hidden-sm-down text-xs-center\"> <?php echo JHtml::_('searchtools.sort', 'COM_INSTALLER_HEADING_PACKAGE_ID', 'package_id', $listDirn, $listOrder); ?> </th> <th width=\"1%\" class=\"nowrap hidden-sm-down text-xs-center\">",
    "conflict": "<th width=\"5%\" class=\"nowrap hidden-sm-down text-xs-center\">"
  },
  {
    "devdecision": "Manual",
    "id": 71801,
    "v2": "<td class=\"hidden-phone\"> <?php echo $item->package_id ?: '&#160;'; ?> </td> <td class=\"hidden-phone\">",
    "resolution": "<td class=\"hidden-sm-down text-xs-center\">",
    "conflict": "<td class=\"hidden-sm-down text-xs-center\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71807,
    "v2": "<td class=\"hidden-phone\"> <?php echo $client; ?><?php",
    "resolution": "<td class=\"hidden-sm-down\"> <?php echo $client; ?> <?php",
    "conflict": "<td class=\"hidden-sm-down\"> <?php echo $client; ?> <?php"
  },
  {
    "devdecision": "Combination",
    "id": 71808,
    "v2": "// This is for Mootools compatibility ?>onclick=\"<?php echo $onClick; ?>\"<?php endif; ?> data-dismiss=\"modal\"><?php echo JText::_('COM_MEDIA_INSERT'); ?></button> <button class=\"btn button-cancel\" type=\"button\" onclick=\"window.parent.jQuery('.modal.in').modal('hide');<?php if (!empty($onClick)) : // This is for Mootools compatibility ?>parent.jModalClose();<?php endif ?>\" data-dismiss=\"modal\"><?php echo JText::_('JCANCEL'); ?></button>",
    "resolution": "// This is for Mootools compatibility ?>onclick=\"<?php echo $onClick; ?>\"<?php endif; ?> data-dismiss=\"modal\"><?php echo JText::_('COM_MEDIA_INSERT'); ?></button> <button class=\"btn btn-outline-danger button-cancel\" type=\"button\" onclick=\"window.parent.jQuery('.modal.in').modal('hide');<?php if (!empty($onClick)) : // This is for Mootools compatibility ?>parent.jModalClose();<?php endif ?>\" data-dismiss=\"modal\"><?php echo JText::_('JCANCEL'); ?></button>",
    "conflict": "// This is for Mootools compatibility ?>onclick=\"<?php echo $onClick; ?>\"<?php endif; ?> data-dismiss=\"modal\"><?php echo JText::_('COM_MEDIA_INSERT') ?></button> <button class=\"btn btn-outline-danger button-cancel\" type=\"button\" onclick=\"window.parent.jQuery('.modal.in').modal('hide');<?php if (!empty($onClick)) : // This is for Mootools compatibility ?>parent.jModalClose();<?php endif ?>\" data-dismiss=\"modal\"><?php echo JText::_('JCANCEL') ?></button>"
  },
  {
    "devdecision": "Manual",
    "id": 71811,
    "v2": "<?php if (!$this->state->get('field.id')) : ?> <div class=\"row-fluid\"> <div class=\"span6 control-group\">",
    "resolution": "<?php if (!$this->state->get('field.id')):?> <div class=\"row\"> <div class=\"col-md-6 control-group\">",
    "conflict": "<?php if (!$this->state->get('field.id')):?> <div class=\"row\"> <div class=\"col-md-6 control-group\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71815,
    "v2": "<a href=\"#\" id=\"thumbs\" onclick=\"MediaManager.setViewType('thumbs')\" class=\"btn <?php echo ($style == \"thumbs\") ? 'active' : ''; ?>\"> <span class=\"icon-grid-view-2\"></span> <?php echo JText::_('COM_MEDIA_THUMBNAIL_VIEW'); ?></a> <a href=\"#\" id=\"details\" onclick=\"MediaManager.setViewType('details')\" class=\"btn <?php echo ($style == \"details\") ? 'active' : ''; ?>\">",
    "resolution": "<a href=\"#\" id=\"thumbs\" onclick=\"MediaManager.setViewType('thumbs')\" class=\"btn btn-secondary<?php echo ($style == 'thumbs') ? ' active' : ''; ?>\"> <span class=\"icon-grid-view-2\"></span> <?php echo JText::_('COM_MEDIA_THUMBNAIL_VIEW'); ?></a> <a href=\"#\" id=\"details\" onclick=\"MediaManager.setViewType('details')\" class=\"btn btn-secondary<?php echo ($style == 'details') ? ' active' : ''; ?>\">",
    "conflict": "<a href=\"#\" id=\"thumbs\" onclick=\"MediaManager.setViewType('thumbs')\" class=\"btn btn-secondary<?php echo ($style == 'thumbs') ? ' active' : ''; ?>\"> <span class=\"icon-grid-view-2\"></span> <?php echo JText::_('COM_MEDIA_THUMBNAIL_VIEW'); ?></a> <a href=\"#\" id=\"details\" onclick=\"MediaManager.setViewType('details')\" class=\"btn btn-secondary<?php echo ($style == 'details') ? ' active' : ''; ?>\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71817,
    "v2": "<?php if ($this->canDelete) : ?> <a class=\"close delete-item\" target=\"_top\" href=\"index.php?option=com_media&amp;task=folder.delete&amp;tmpl=index&amp;<?php echo JSession::getFormToken(); ?>=1&amp;folder=<?php echo $this->state->folder; ?>&amp;rm[]=<?php echo $folder->name; ?>\" rel=\"<?php echo $folder->name; ?> :: <?php echo $folder->files + $folder->folders; ?>\" title=\"<?php echo JText::_('JACTION_DELETE'); ?>\">&#215;</a> <div class=\"pull-left\">",
    "resolution": "<?php if ($this->canDelete):?> <a class=\"close delete-item\" target=\"_top\" href=\"index.php?option=com_media&amp;task=folder.delete&amp;tmpl=index&amp;<?php echo JSession::getFormToken(); ?>=1&amp;folder=<?php echo $this->state->folder; ?>&amp;rm[]=<?php echo $folder->name; ?>\" rel=\"<?php echo $folder->name; ?> :: <?php echo $folder->files + $folder->folders; ?>\" title=\"<?php echo JText::_('JACTION_DELETE');?>\">&#215;</a> <div class=\"float-xs-left\">",
    "conflict": "<?php if ($this->canDelete):?> <a class=\"close delete-item\" target=\"_top\" href=\"index.php?option=com_media&amp;task=folder.delete&amp;tmpl=index&amp;<?php echo JSession::getFormToken(); ?>=1&amp;folder=<?php echo $this->state->folder; ?>&amp;rm[]=<?php echo $folder->name; ?>\" rel=\"<?php echo $folder->name; ?> :: <?php echo $folder->files + $folder->folders; ?>\" title=\"<?php echo JText::_('JACTION_DELETE');?>\">&#215;</a> <div class=\"float-xs-left\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71818,
    "v2": "<?php if ($this->canDelete) : ?> <a class=\"close delete-item\" target=\"_top\" href=\"index.php?option=com_media&amp;task=file.delete&amp;tmpl=index&amp;<?php echo JSession::getFormToken(); ?>=1&amp;folder=<?php echo $this->state->folder; ?>&amp;rm[]=<?php echo $video->name; ?>\" rel=\"<?php echo $video->name; ?>\" title=\"<?php echo JText::_('JACTION_DELETE'); ?>\">&#215;</a> <div class=\"pull-left\">",
    "resolution": "<?php if ($this->canDelete):?> <a class=\"close delete-item\" target=\"_top\" href=\"index.php?option=com_media&amp;task=file.delete&amp;tmpl=index&amp;<?php echo JSession::getFormToken(); ?>=1&amp;folder=<?php echo $this->state->folder; ?>&amp;rm[]=<?php echo $video->name; ?>\" rel=\"<?php echo $video->name; ?>\" title=\"<?php echo JText::_('JACTION_DELETE');?>\">&#215;</a> <div class=\"float-xs-left\">",
    "conflict": "<?php if ($this->canDelete):?> <a class=\"close delete-item\" target=\"_top\" href=\"index.php?option=com_media&amp;task=file.delete&amp;tmpl=index&amp;<?php echo JSession::getFormToken(); ?>=1&amp;folder=<?php echo $this->state->folder; ?>&amp;rm[]=<?php echo $video->name; ?>\" rel=\"<?php echo $video->name; ?>\" title=\"<?php echo JText::_('JACTION_DELETE');?>\">&#215;</a> <div class=\"float-xs-left\">"
  },
  {
    "devdecision": "Manual",
    "id": 71824,
    "v2": "<td id=\"status-<?php echo $module->id; ?>\"> <?php if ($module->published) : ?> <span class=\"label label-success\">",
    "resolution": "<td id=\"status-<?php echo $module->id; ?>\" class=\"text-xs-center\"> <?php if ($module->published) : ?> <span class=\"tag tag-success\">",
    "conflict": "<td id=\"status-<?php echo $module->id; ?>\" width=\"15%\" class=\"text-xs-center\"> <?php if ($module->published):?> <span class=\"tag tag-success\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71864,
    "v2": "<?php endif; ?> <td class=\"hidden-phone hidden-tablet\"> <label for=\"cb<?php echo $i; ?>\" class=\"small\">",
    "resolution": "<?php endif;?> <td class=\"hidden-sm-down text-xs-center\"> <label for=\"cb<?php echo $i;?>\" class=\"small\">",
    "conflict": "<?php endif;?> <td class=\"hidden-sm-down text-xs-center\"> <label for=\"cb<?php echo $i;?>\" class=\"small\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71866,
    "v2": "<?php if ($this->type == 'file') : ?> <form action=\"<?php echo JRoute::_('index.php?option=com_templates&view=template&id=' . $input->getInt('id') . '&file=' . $this->file); ?>\" method=\"post\" name=\"adminForm\" id=\"adminForm\" class=\"form-horizontal\">",
    "resolution": "<?php if ($this->type == 'file'): ?> <form action=\"<?php echo JRoute::_('index.php?option=com_templates&view=template&id=' . $input->getInt('id') . '&file=' . $this->file); ?>\" method=\"post\" name=\"adminForm\" id=\"adminForm\">",
    "conflict": "<?php if ($this->type == 'file'): ?> <form action=\"<?php echo JRoute::_('index.php?option=com_templates&view=template&id=' . $input->getInt('id') . '&file=' . $this->file); ?>\" method=\"post\" name=\"adminForm\" id=\"adminForm\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71872,
    "v2": "<div class=\"span4\"> <legend><?php echo JText::_('COM_TEMPLATES_OVERRIDES_COMPONENTS'); ?></legend> <ul class=\"nav nav-list\">",
    "resolution": "<div class=\"col-md-4\"> <legend><?php echo JText::_('COM_TEMPLATES_OVERRIDES_COMPONENTS');?></legend> <ul class=\"list-unstyled\">",
    "conflict": "<div class=\"col-md-4\"> <legend><?php echo JText::_('COM_TEMPLATES_OVERRIDES_COMPONENTS');?></legend> <ul class=\"list-unstyled\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71876,
    "v2": "<ul class='nav nav-list directory-tree'> <?php foreach ($this->files as $key => $value) : ?> <?php if (is_array($value)) : ?>",
    "resolution": "<ul class='list-unstyled directory-tree'> <?php foreach($this->files as $key => $value): ?> <?php if(is_array($value)): ?>",
    "conflict": "<ul class='list-unstyled directory-tree'> <?php foreach($this->files as $key => $value): ?> <?php if(is_array($value)): ?>"
  },
  {
    "devdecision": "Version 1",
    "id": 71880,
    "v2": "<ul class='nav nav-list directory-tree'> <?php foreach ($this->files as $key => $value) : ?> <?php if (is_array($value)) : ?>",
    "resolution": "<ul class='list-unstyled directory-tree'> <?php foreach($this->files as $key => $value): ?> <?php if(is_array($value)): ?>",
    "conflict": "<ul class='list-unstyled directory-tree'> <?php foreach($this->files as $key => $value): ?> <?php if(is_array($value)): ?>"
  },
  {
    "devdecision": "Version 2",
    "id": 71901,
    "v2": "<?php $link_class = $tagParams->get('tag_link_class', 'label label-info'); ?> <li class=\"tag-<?php echo $tag->tag_id; ?> tag-list<?php echo $i; ?>\" itemprop=\"keywords\"> <a href=\"<?php echo JRoute::_(TagsHelperRoute::getTagRoute($tag->tag_id . '-' . $tag->alias)); ?>\" class=\"<?php echo $link_class; ?>\">",
    "resolution": "<?php $link_class = $tagParams->get('tag_link_class', 'label label-info'); ?> <li class=\"tag-<?php echo $tag->tag_id; ?> tag-list<?php echo $i; ?>\" itemprop=\"keywords\"> <a href=\"<?php echo JRoute::_(TagsHelperRoute::getTagRoute($tag->tag_id . '-' . $tag->alias)); ?>\" class=\"<?php echo $link_class; ?>\">",
    "conflict": "<?php $link_class = $tagParams->get('tag_link_class', 'tag tag-info'); ?> <li class=\"tag-<?php echo $tag->tag_id; ?> tag-list<?php echo $i ?>\" itemprop=\"keywords\"> <a href=\"<?php echo JRoute::_(TagsHelperRoute::getTagRoute($tag->tag_id . '-' . $tag->alias)) ?>\" class=\"<?php echo $link_class; ?>\">"
  },
  {
    "devdecision": "Version 1",
    "id": 71903,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-mini button btn-success\"><span class=\"icon-plus\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-mini button btn-danger\"><span class=\"icon-minus\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-mini button btn-primary\"><span class=\"icon-move\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])):?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['remove'])):?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['move'])):?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif;?>",
    "conflict": "<?php if (!empty($buttons['add'])):?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['remove'])):?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['move'])):?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif;?>"
  },
  {
    "devdecision": "Version 1",
    "id": 71904,
    "v2": "<?php if (!empty($buttons['add'])) : ?><a class=\"group-add btn btn-mini button btn-success\"><span class=\"icon-plus\"></span> </a><?php endif; ?> <?php if (!empty($buttons['remove'])) : ?><a class=\"group-remove btn btn-mini button btn-danger\"><span class=\"icon-minus\"></span> </a><?php endif; ?> <?php if (!empty($buttons['move'])) : ?><a class=\"group-move btn btn-mini button btn-primary\"><span class=\"icon-move\"></span> </a><?php endif; ?>",
    "resolution": "<?php if (!empty($buttons['add'])):?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['remove'])):?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['move'])):?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif;?>",
    "conflict": "<?php if (!empty($buttons['add'])):?><a class=\"group-add btn btn-sm button btn-success\"><span class=\"icon-plus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['remove'])):?><a class=\"group-remove btn btn-sm button btn-danger\"><span class=\"icon-minus icon-white\"></span> </a><?php endif;?> <?php if (!empty($buttons['move'])):?><a class=\"group-move btn btn-sm button btn-primary\"><span class=\"icon-move icon-white\"></span> </a><?php endif;?>"
  },
  {
    "devdecision": "Version 1",
    "id": 71926,
    "v2": "// Remove protocol, path and query string from URL $basename = basename($packageURL);",
    "resolution": "// Remove protocol, path and query string from URL $basename = basename($packageURL);",
    "conflict": "// Remove protocol, path and query string from URL $basename = basename($packageURL);"
  },
  {
    "devdecision": "Combination",
    "id": 71928,
    "v2": "JArrayHelper::toInteger($user_ids);",
    "resolution": "$user_ids = ArrayHelper::toInteger($user_ids);  // Check if I am a Super Admin $iAmSuperAdmin = JFactory::getUser()->authorise('core.admin');",
    "conflict": "// Get the DB object $db = $this->getDbo();  $user_ids = ArrayHelper::toInteger($user_ids);"
  },
  {
    "devdecision": "Version 1",
    "id": 71930,
    "v2": "$decryptedConfig = $mcrypt->decryptString($config);",
    "resolution": "$decryptedConfig = $mcrypt->decryptString($config);",
    "conflict": "$decryptedConfig = $mcrypt->decryptString($config);"
  },
  {
    "devdecision": "Version 1",
    "id": 71931,
    "v2": "$otpKey = $method . ':' . $decryptedConfig;",
    "resolution": "$otpKey = $method . ':' . $decryptedConfig;",
    "conflict": "$otpKey = $method . ':' . $decryptedConfig;"
  },
  {
    "devdecision": "Version 1",
    "id": 71954,
    "v2": "// We need to mock JSession for this test, don't use the getMockSession() method since it has an inbuilt method to mock loading the user $this->saveFactoryState();  JFactory::$session = $this->getMockBuilder('JSession')->getMock();",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 71956,
    "v2": "$class = $this->getMockBuilder('JApplicationCli') ->setMethods(array()) ->setConstructorArgs(array($mockInput, $mockConfig, $mockDispatcher)) ->getMock();",
    "resolution": "$class = $this->getMockForAbstractClass('JApplicationCli', array($mockInput, $mockConfig, null, null, $mockDispatcher));",
    "conflict": "$class = $this->getMockForAbstractClass('JApplicationCli', array($mockInput, $mockConfig, null, null, $mockDispatcher));"
  },
  {
    "devdecision": "Version 1",
    "id": 71958,
    "v2": "$mockSession = $this->getMockBuilder('JSession')->setMethods(array( '_start', 'get'))->getMock();",
    "resolution": "$mockSession = $this->getMockBuilder('JSession') ->setMethods(['get']) ->disableOriginalConstructor() ->getMock();",
    "conflict": "$mockSession = $this->getMockBuilder('JSession') ->setMethods(['get']) ->disableOriginalConstructor() ->getMock();"
  },
  {
    "devdecision": "Manual",
    "id": 71995,
    "v2": "$tooltip = htmlspecialchars($item->title, ENT_QUOTES, 'UTF-8') . '<br />' . JText::sprintf('JCATEGORY_SPRINTF', $item->category_title); $classes = 'hasPopover label label-association label-' . $item->lang_sef;",
    "resolution": "$tooltip = htmlspecialchars($item->title, ENT_QUOTES, 'UTF-8') . '<br>' . JText::sprintf('JCATEGORY_SPRINTF', $item->category_title); $classes = 'hasPopover tag tag-association tag-' . $item->lang_sef;",
    "conflict": "$tooltip = $item->title . '<br>' . JText::sprintf('JCATEGORY_SPRINTF', $item->category_title); $classes = 'hasPopover tag tag-association tag-' . $item->lang_sef;"
  },
  {
    "devdecision": "Manual",
    "id": 72012,
    "v2": "",
    "resolution": "<div class=\"notify-alerts\"> <jdoc:include type=\"message\" /> </div>",
    "conflict": "<div class=\"notify-alerts\"> <jdoc:include type=\"message\" /> </div>"
  },
  {
    "devdecision": "Concatenation",
    "id": 72154,
    "v2": "// Output as HTML5 $this->setHtml5(true);",
    "resolution": "// Output as HTML5 $this->setHtml5(true);// Add Stylesheets JHtml::_('bootstrap.loadCss', true, $this->direction); JHtml::_('stylesheet', 'installation/template/css/template.css'); JHtml::_('stylesheet', 'media/vendor/font-awesome/css/font-awesome.min.css');",
    "conflict": "// Add Stylesheets JHtml::_('bootstrap.loadCss', true, $this->direction); JHtml::_('stylesheet', 'installation/template/css/template.css'); JHtml::_('stylesheet', 'media/vendor/font-awesome/css/font-awesome.min.css');"
  },
  {
    "devdecision": "Version 1",
    "id": 72165,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Combination",
    "id": 72166,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));  $maxSize = JHtml::_('number.bytes', JUtility::getMaxUploadSize());",
    "resolution": "$maxSize = JHtml::_('number.bytes', JUtility::getMaxUploadSize());",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 72169,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('behavior.core'); JHtml::_('jquery.framework'); JHtml::_('script', 'system/moduleorder.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "JHtml::_('script', 'system/fields/moduleorder.js', array('version' => 'auto', 'relative' => true));",
    "conflict": "JHtml::_('script', 'system/fields/moduleorder.js', false, true);"
  },
  {
    "devdecision": "Version 1",
    "id": 72171,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "JText::script('JFIELD_PASSWORD_INDICATE_INCOMPLETE'); JText::script('JFIELD_PASSWORD_INDICATE_COMPLETE');",
    "conflict": "JText::script('JFIELD_PASSWORD_INDICATE_INCOMPLETE'); JText::script('JFIELD_PASSWORD_INDICATE_COMPLETE');"
  },
  {
    "devdecision": "Version 2",
    "id": 72173,
    "v2": "$checked  = ((string) $option->value === $value) ? 'checked=\"checked\"' : ''; $optionClass    = !empty($option->class) ? 'class=\"' . $option->class . '\"' : ''; $disabled = !empty($option->disable) || ($disabled && !$checked) ? 'disabled' : '';",
    "resolution": "$checked  = ((string) $option->value === $value) ? 'checked=\"checked\"' : ''; $optionClass    = !empty($option->class) ? 'class=\"' . $option->class . '\"' : ''; $disabled = !empty($option->disable) || ($disabled && !$checked) ? 'disabled' : '';",
    "conflict": "$checked     = ((string) $option->value == $value) ? 'checked=\"checked\"' : ''; $optionClass = !empty($option->class) ? 'class=\"' . $option->class . '\"' : ''; $disabled    = !empty($option->disable) || ($disabled && !$checked) ? 'disabled' : '';"
  },
  {
    "devdecision": "Version 1",
    "id": 72174,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 72177,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 72178,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 72179,
    "v2": "// Including fallback code for HTML5 non supported browsers. JHtml::_('jquery.framework'); JHtml::_('script', 'system/html5fallback.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 72180,
    "v2": "// Load the modal behavior script. JHtml::_('behavior.modal', 'a.modal_' . $id);  JHtml::_('script', 'jui/fielduser.min.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "JHtml::script('system/fields/fielduser.min.js', array('version' => 'auto', 'relative' => true));",
    "conflict": "JHtml::script('system/fields/fielduser.min.js', false, true, false, false, true);"
  },
  {
    "devdecision": "Manual",
    "id": 72187,
    "v2": "// Include jQuery JHtml::_('jquery.framework');  JHtml::_('script', 'system/multiselect.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "JHtml::_('script', 'system/multiselect.min.js', array('version' => 'auto', 'relative' => true));",
    "conflict": "JHtml::_('script', 'system/multiselect.min.js', false, true);"
  },
  {
    "devdecision": "Manual",
    "id": 72189,
    "v2": "JHtml::_('stylesheet', 'system/calendar-jos.css', array('version' => 'auto', 'relative' => true), $attribs); JHtml::_('script', $tag . '/calendar.js', array('version' => 'auto', 'relative' => true)); JHtml::_('script', $tag . '/calendar-setup.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "JHtml::_('stylesheet', 'system/calendar-jos.css', array('version' => 'auto', 'relative' => true), $attribs); JHtml::_('script', $tag . '/fields/calendar.js', array('version' => 'auto', 'relative' => true)); JHtml::_('script', $tag . '/fields/calendar-setup.js', array('version' => 'auto', 'relative' => true));",
    "conflict": "JHtml::_('stylesheet', 'system/calendar-jos.css', array(' title' => JText::_('JLIB_HTML_BEHAVIOR_GREEN'), ' media' => 'all'), true); JHtml::_('script', $tag . '/fields/calendar.js', false, true); JHtml::_('script', $tag . '/fields/calendar-setup.js', false, true);"
  },
  {
    "devdecision": "Version 1",
    "id": 72326,
    "v2": "$dispatcher->trigger('onContentAfterDelete', array('com_media.file', &$object_file)); $app->enqueueMessage(JText::sprintf('COM_MEDIA_DELETE_COMPLETE', substr($object_file->filepath, strlen(COM_MEDIA_BASE))));",
    "resolution": "JFactory::getApplication()->triggerEvent('onContentAfterDelete', array('com_media.file', &$object_file)); $this->setMessage(JText::sprintf('COM_MEDIA_DELETE_COMPLETE', substr($object_file->filepath, strlen(COM_MEDIA_BASE))));  continue;",
    "conflict": "JFactory::getApplication()->triggerEvent('onContentAfterDelete', array('com_media.file', &$object_file)); $this->setMessage(JText::sprintf('COM_MEDIA_DELETE_COMPLETE', substr($object_file->filepath, strlen(COM_MEDIA_BASE))));  continue;"
  },
  {
    "devdecision": "Version 1",
    "id": 72502,
    "v2": "require_once JPATH_LIBRARIES . '/import.legacy.php';  // Bootstrap the CMS libraries. require_once JPATH_LIBRARIES . '/cms.php';",
    "resolution": "require_once JPATH_LIBRARIES . '/bootstrap.php';",
    "conflict": "require_once JPATH_LIBRARIES . '/bootstrap.php';"
  },
  {
    "devdecision": "Version 2",
    "id": 72520,
    "v2": "// Create home element if ($template->home == 1 && !isset($template_home) || $this->_language_filter && $template->home == $tag)",
    "resolution": "// Create home element if ($template->home == 1 && !isset($template_home) || $this->_language_filter && $template->home == $tag)",
    "conflict": "$template->params = new Registry($template->params);  // Create home element if ($template->home == 1 && !isset($templates[0]) || $this->getLanguageFilter() && $template->home == $tag)"
  },
  {
    "devdecision": "Version 1",
    "id": 72616,
    "v2": "* The PHPMailer Version number. * @var string */ public $Version = '5.2.14';  /**",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 72618,
    "v2": "$this->exceptions = (boolean)$exceptions;",
    "resolution": "if (!is_null($exceptions)) { $this->exceptions = (boolean)$exceptions; } //Pick an appropriate debug output format automatically $this->Debugoutput = ((strpos(PHP_SAPI, 'cli') !== false) ? 'echo' : 'html');",
    "conflict": "if (!is_null($exceptions)) { $this->exceptions = (boolean)$exceptions; } //Pick an appropriate debug output format automatically $this->Debugoutput = ((strpos(PHP_SAPI, 'cli') !== false) ? 'echo' : 'html');"
  },
  {
    "devdecision": "Version 1",
    "id": 72623,
    "v2": "//If lines are too long, change to quoted-printable transfer encoding if (self::hasLineLongerThanMax($this->AltBody)) {",
    "resolution": "//If lines are too long, and we're not already using an encoding that will shorten them, //change to quoted-printable transfer encoding if ('base64' != $altBodyEncoding and static::hasLineLongerThanMax($this->AltBody)) {",
    "conflict": "//If lines are too long, and we're not already using an encoding that will shorten them, //change to quoted-printable transfer encoding if ('base64' != $altBodyEncoding and static::hasLineLongerThanMax($this->AltBody)) {"
  },
  {
    "devdecision": "Version 2",
    "id": 72680,
    "v2": "// Check for a custom js file JHtml::_('script', 'user.js', array('version' => 'auto', 'relative' => true));",
    "resolution": "// Check for a custom js file JHtml::_('script', 'user.js', array('version' => 'auto', 'relative' => true));",
    "conflict": "if (file_exists($userCss) && filesize($userCss) > 0) { $this->addStyleSheetVersion($this->baseurl . '/templates/' . $this->template . '/css/user.css'); }"
  },
  {
    "devdecision": "Combination",
    "id": 72725,
    "v2": "$catids                = array_reverse($category->getPath()); $needles['category']   = $catids; $needles['categories'] = $catids;  if ($language && $language !== '*' && JLanguageMultilang::isEnabled())",
    "resolution": "if ($language && $language !== '*' && JLanguageMultilang::isEnabled())",
    "conflict": "if ($language && $language != \"*\" && JLanguageMultilang::isEnabled())"
  },
  {
    "devdecision": "Version 1",
    "id": 72729,
    "v2": "if ($query['layout'] === 'default') { unset($query['layout']); }",
    "resolution": "return array_reverse($category->getPath(), true);",
    "conflict": "return array_reverse($category->getPath(), true);"
  },
  {
    "devdecision": "Combination",
    "id": 72732,
    "v2": "$temp       = new Registry; $temp->loadString($item->params); $item->params = clone $this->params;",
    "resolution": "$temp       = new Registry($item->params); $item->params = clone $this->params;",
    "conflict": "$temp       = new Registry($item->params); $item->params = clone($this->params);"
  },
  {
    "devdecision": "Version 1",
    "id": 72744,
    "v2": "JHtml::_('jquery.framework'); JHtml::script($this->_basePath . '/tinymce.min.js', false, false, false, false, false);",
    "resolution": "JHtml::_('behavior.polyfill', array('event'), 'lt IE 9'); JHtml::_('script', $this->_basePath . '/tinymce.min.js', false, false, false, false, false); JHtml::_('script', 'system/tinymce-init.min.js', false, true);",
    "conflict": "JHtml::_('behavior.polyfill', array('event'), 'lt IE 9'); JHtml::_('script', $this->_basePath . '/tinymce.min.js', false, false, false, false, false); JHtml::_('script', 'system/tinymce-init.min.js', false, true);"
  },
  {
    "devdecision": "Version 2",
    "id": 72806,
    "v2": "",
    "resolution": "",
    "conflict": "if ($dispatcher) { $this->setDispatcher($dispatcher); }"
  },
  {
    "devdecision": "Combination",
    "id": 72812,
    "v2": "$orderingDirection = strtolower($this->getState('list.direction')); $direction         = ($orderingDirection == 'desc') ? -1 : 1; JArrayHelper::sortObjects($result, $ordering, $direction, true, true);",
    "resolution": "$orderingDirection = strtolower($this->getState('list.direction')); $direction         = ($orderingDirection == 'desc') ? -1 : 1; $result = ArrayHelper::sortObjects($result, $ordering, $direction, true, true);",
    "conflict": "$direction = ($this->getState('list.direction') == 'desc') ? -1 : 1; $result = ArrayHelper::sortObjects($result, $ordering, $direction, true, true);"
  },
  {
    "devdecision": "Combination",
    "id": 72816,
    "v2": "'/libraries/platform.php', // Joomla! 3.6.3 '/media/editors/codemirror/mode/jade/jade.js', '/media/editors/codemirror/mode/jade/jade.min.js',",
    "resolution": "// Joomla! 3.6.3 '/media/editors/codemirror/mode/jade/jade.js', '/media/editors/codemirror/mode/jade/jade.min.js', // Joomla __DEPLOY_VERSION__ '/libraries/joomla/user/authentication.php', '/libraries/platform.php',",
    "conflict": "// Joomla __DEPLOY_VERSION__ '/libraries/joomla/user/authentication.php',"
  },
  {
    "devdecision": "Version 1",
    "id": 72848,
    "v2": "<?php if (empty($this->items)) : ?> <div class=\"alert alert-no-items\"> <?php echo JText::_('COM_FINDER_INDEX_NO_CONTENT'); ?> </div> <?php else : ?>",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 72849,
    "v2": ".j-jed-message { margin-bottom: 40px; line-height: 2em; color:#333333; }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 72863,
    "v2": "<?php echo JHtml::_('batch.language'); ?>",
    "resolution": "<select name=\"batch[menu_id]\" id=\"batch-menu-id\"> <option value=\"\"><?php echo JText::_('JLIB_HTML_BATCH_NO_CATEGORY') ?></option> <?php echo JHtml::_('select.options', JHtml::_('menu.menuitems', array('published' => $published, 'checkacl' => (int) $this->state->get('menutypeid')))); ?> </select>",
    "conflict": "<select name=\"batch[menu_id]\" id=\"batch-menu-id\"> <option value=\"\"><?php echo JText::_('JLIB_HTML_BATCH_NO_CATEGORY') ?></option> <?php echo JHtml::_('select.options', JHtml::_('menu.menuitems', array('published' => $published, 'checkacl' => (int) $this->state->get('menutypeid')))); ?> </select>"
  },
  {
    "devdecision": "Version 1",
    "id": 72939,
    "v2": "// Disable transparent sid support ini_set('session.use_trans_sid', '0');  // Only allow the session ID to come from cookies and nothing else. ini_set('session.use_only_cookies', '1');",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 2",
    "id": 72944,
    "v2": "if (!$this->_validate()) { // Destroy the session if it's not valid $this->destroy(); }",
    "resolution": "if (!$this->_validate()) { // Destroy the session if it's not valid $this->destroy(); }",
    "conflict": "$this->_validate();"
  },
  {
    "devdecision": "Version 1",
    "id": 72953,
    "v2": "if (isset($options['force_ssl'])) { $this->_force_ssl = (bool) $options['force_ssl']; }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 72970,
    "v2": "// Disable transparent sid support ini_set('session.use_trans_sid', '0'); // Only allow the session ID to come from cookies and nothing else. ini_set('session.use_only_cookies', '1');",
    "resolution": "// Create handler $this->_store = JSessionStorage::getInstance($store, $options);",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 72971,
    "v2": "// Set options $this->_setOptions($options); $this->_setCookieParams();",
    "resolution": "$this->_setOptions($options);",
    "conflict": "$this->_setOptions($options);"
  },
  {
    "devdecision": "Manual",
    "id": 72978,
    "v2": "session_regenerate_id(true); session_start();",
    "resolution": "// Restart session with new id $this->_handler->regenerate(true, null); $this->_handler->start();",
    "conflict": "$this->_handler->regenerate(true, null); $this->_handler->start();"
  },
  {
    "devdecision": "Manual",
    "id": 72981,
    "v2": "if (isset($options['force_ssl'])) { $this->_force_ssl = (bool) $options['force_ssl']; }",
    "resolution": "{ $this->_security = explode(',', $options['security']); }",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 73000,
    "v2": "$user       = JFactory::getUser(); $userId     = $user->get('id');",
    "resolution": "$user   = JFactory::getUser(); $userId = $user->get('id');",
    "conflict": "$user   = JFactory::getUser(); $userId = $user->get('id');"
  },
  {
    "devdecision": "Version 1",
    "id": 73004,
    "v2": "$value = JText::_($item->componentname); $vars  = null;",
    "resolution": "$titleParts   = array(); $titleParts[] = JText::_($item->componentname); $vars         = null;",
    "conflict": "$titleParts   = array(); $titleParts[] = JText::_($item->componentname); $vars         = null;"
  },
  {
    "devdecision": "Version 1",
    "id": 73008,
    "v2": "<td class=\"hidden-phone\">",
    "resolution": "<td class=\"center hidden-phone\"> <?php echo (int) $item->hits; ?> </td> <td class=\"center hidden-phone\">",
    "conflict": "<td class=\"center hidden-phone\"> <?php echo (int) $item->hits; ?> </td> <td class=\"center hidden-phone\">"
  },
  {
    "devdecision": "Combination",
    "id": 73024,
    "v2": "$xml = $form->getXml(); $colours = array_pop($xml->xpath('fields/fields[@name=\"params\"]/field[@name=\"colours\"]'));",
    "resolution": "$xml = $form->getXml(); $data = $xml->xpath('fields/fields[@name=\"params\"]/field[@name=\"colours\"]'); $colours = array_pop($data);",
    "conflict": "$xml = $form->getXML(); $data = $xml->xpath('fields/fields[@name=\"params\"]/field[@name=\"colours\"]'); $colours = array_pop($data);"
  },
  {
    "devdecision": "Combination",
    "id": 73025,
    "v2": "$xml = $form->getXml(); $title = array_pop($xml->xpath('fields/field[@name=\"title\"]'));",
    "resolution": "$xml = $form->getXml(); $data = $xml->xpath('fields/field[@name=\"title\"]'); $title = array_pop($data);",
    "conflict": "$xml = $form->getXML(); $data = $xml->xpath('fields/field[@name=\"title\"]'); $title = array_pop($data);"
  },
  {
    "devdecision": "Combination",
    "id": 73026,
    "v2": "$xml = $form->getXml(); $title = array_pop($xml->xpath('fields/field[@name=\"title\"]'));",
    "resolution": "$xml = $form->getXml(); $data = $xml->xpath('fields/field[@name=\"title\"]'); $title = array_pop($data);",
    "conflict": "$xml = $form->getXML(); $data = $xml->xpath('fields/field[@name=\"title\"]'); $title = array_pop($data);"
  },
  {
    "devdecision": "Combination",
    "id": 73027,
    "v2": "$xml = $form->getXml();  $field = array_pop($xml->xpath('fields/field[@name=\"missingrule\"]'));",
    "resolution": "$xml = $form->getXml(); $data = $xml->xpath('fields/field[@name=\"missingrule\"]'); $field = array_pop($data);",
    "conflict": "$xml = $form->getXML(); $data = $xml->xpath('fields/field[@name=\"missingrule\"]'); $field = array_pop($data);"
  },
  {
    "devdecision": "Version 2",
    "id": 73055,
    "v2": "",
    "resolution": "",
    "conflict": "if (isset($item->query['format']) && $app->get('sef_suffix')) { $item->flink .= '&format=' . $item->query['format']; }"
  },
  {
    "devdecision": "Version 1",
    "id": 73058,
    "v2": "spl_autoload_register(array('ComposerAutoloaderInit13e7038e3c9f87f9f8ac2ce0fc0b2380', 'loadClassLoader'), true, true); self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(); spl_autoload_unregister(array('ComposerAutoloaderInit13e7038e3c9f87f9f8ac2ce0fc0b2380', 'loadClassLoader'));",
    "resolution": "spl_autoload_register(array('ComposerAutoloaderInitb3edb327e86a56c136a6490085be5a6b', 'loadClassLoader'), true, true); self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(); spl_autoload_unregister(array('ComposerAutoloaderInitb3edb327e86a56c136a6490085be5a6b', 'loadClassLoader'));",
    "conflict": "spl_autoload_register(array('ComposerAutoloaderInitb3edb327e86a56c136a6490085be5a6b', 'loadClassLoader'), true, true); self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(); spl_autoload_unregister(array('ComposerAutoloaderInitb3edb327e86a56c136a6490085be5a6b', 'loadClassLoader'));"
  },
  {
    "devdecision": "Manual",
    "id": 73063,
    "v2": "spl_autoload_register(array('ComposerAutoloaderInita9629ae58a6f9283bf172fc8f9581ac2', 'loadClassLoader'), true, true); self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(); spl_autoload_unregister(array('ComposerAutoloaderInita9629ae58a6f9283bf172fc8f9581ac2', 'loadClassLoader'));",
    "resolution": "spl_autoload_register(array('ComposerAutoloaderInitbc7c0bdcb7cff4849589c005a836733a', 'loadClassLoader'), true, true); self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(); spl_autoload_unregister(array('ComposerAutoloaderInitbc7c0bdcb7cff4849589c005a836733a', 'loadClassLoader'));",
    "conflict": "spl_autoload_register(array('ComposerAutoloaderInitab957c9932abedc688f51152c97f5f97', 'loadClassLoader'), true, true); self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(); spl_autoload_unregister(array('ComposerAutoloaderInitab957c9932abedc688f51152c97f5f97', 'loadClassLoader'));"
  },
  {
    "devdecision": "Version 1",
    "id": 73071,
    "v2": "if ($this->id) {",
    "resolution": "$this->modified_time = $date->toSql();  if ($this->id) {",
    "conflict": "$this->modified_time = $date->toSql();  if ($this->id) {"
  },
  {
    "devdecision": "Combination",
    "id": 73077,
    "v2": "* @since  11.1",
    "resolution": "* @since       11.1 * @deprecated  Will be removed when the minimum supported PHP version no longer includes the deprecated PHP `mysql` extension */",
    "conflict": "* @package     Joomla.Platform * @subpackage  Database * @since       11.1 * @deprecated  Will be removed when the minimum supported PHP version no longer includes the deprecated PHP `mysql` extension"
  },
  {
    "devdecision": "Combination",
    "id": 73078,
    "v2": "* @since  11.1",
    "resolution": "* @since       11.1 * @deprecated  Will be removed when the minimum supported PHP version no longer includes the deprecated PHP `mysql` extension */",
    "conflict": "* @package     Joomla.Platform * @subpackage  Database * @since       11.1 * @deprecated  Will be removed when the minimum supported PHP version no longer includes the deprecated PHP `mysql` extension"
  },
  {
    "devdecision": "Combination",
    "id": 73080,
    "v2": "* @since  11.1",
    "resolution": "* @since       11.1 * @deprecated  Will be removed when the minimum supported PHP version no longer includes the deprecated PHP `mysql` extension */",
    "conflict": "* @package     Joomla.Platform * @subpackage  Database * @since       11.1 * @deprecated  Will be removed when the minimum supported PHP version no longer includes the deprecated PHP `mysql` extension"
  },
  {
    "devdecision": "Combination",
    "id": 73088,
    "v2": "* @since  11.1",
    "resolution": "* @since       11.1 * @deprecated  4.0  Use {@link \\Joomla\\String\\String} instead unless otherwise noted. */",
    "conflict": "* @package     Joomla.Platform * @subpackage  String * @since       11.1 * @deprecated  4.0  Use {@link \\Joomla\\String\\String} instead unless otherwise noted."
  },
  {
    "devdecision": "Combination",
    "id": 73091,
    "v2": "* @since  11.1",
    "resolution": "* @since  11.1 * @deprecated  4.0 Use Joomla\\Utilities\\ArrayHelper instead */",
    "conflict": "* @package     Joomla.Platform * @subpackage  Utilities * @since       11.1 * @deprecated  4.0 Use Joomla\\Utilities\\ArrayHelper instead"
  },
  {
    "devdecision": "Version 1",
    "id": 73097,
    "v2": "$mockConfig = $this->getMock('JRegistry', array('test'), array(null), '', true); $mockConfig->expects($this->any())",
    "resolution": "$mockConfig = $this->getMock('\\\\Joomla\\\\Registry\\\\Registry', array('test'), array(null), '', true); $mockConfig ->expects($this->any())",
    "conflict": "$mockConfig = $this->getMock('\\\\Joomla\\\\Registry\\\\Registry', array('test'), array(null), '', true); $mockConfig ->expects($this->any())"
  },
  {
    "devdecision": "Version 1",
    "id": 73099,
    "v2": "$mockConfig = $this->getMock('JRegistry', array('test'), array(null), '', true); $mockConfig->expects($this->any())",
    "resolution": "$mockConfig = $this->getMock('\\\\Joomla\\\\Registry\\\\Registry', array('test'), array(null), '', true); $mockConfig ->expects($this->any())",
    "conflict": "$mockConfig = $this->getMock('\\\\Joomla\\\\Registry\\\\Registry', array('test'), array(null), '', true); $mockConfig ->expects($this->any())"
  },
  {
    "devdecision": "Version 1",
    "id": 73100,
    "v2": "$this->assertInstanceOf('JRegistry', $template->params);",
    "resolution": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );",
    "conflict": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );"
  },
  {
    "devdecision": "Version 1",
    "id": 73101,
    "v2": "$this->assertInstanceOf('JRegistry', $template->params);",
    "resolution": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );",
    "conflict": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );"
  },
  {
    "devdecision": "Version 1",
    "id": 73103,
    "v2": "$this->assertInstanceOf('JRegistry', $template->params);",
    "resolution": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );",
    "conflict": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );"
  },
  {
    "devdecision": "Version 1",
    "id": 73105,
    "v2": "$this->assertInstanceOf('JRegistry', $template->params);",
    "resolution": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );",
    "conflict": "$this->assertInstanceOf( '\\\\Joomla\\\\Registry\\\\Registry', $template->params );"
  },
  {
    "devdecision": "Version 1",
    "id": 73120,
    "v2": "* Test... * * @return void",
    "resolution": "* Test clean() * * @return  void",
    "conflict": "* Test clean() * * @return  void"
  },
  {
    "devdecision": "Version 1",
    "id": 73130,
    "v2": "$eid  = $this->input->getInt('eid', 0); $skip = $this->input->get('skip', array(), 'array');",
    "resolution": "$eid           = $this->input->getInt('eid', 0); $skip          = $this->input->get('skip', array(), 'array');",
    "conflict": "$eid           = $this->input->getInt('eid', 0); $skip          = $this->input->get('skip', array(), 'array');"
  },
  {
    "devdecision": "Version 1",
    "id": 73158,
    "v2": "* @var    JRegistry  Options for the JLinkedinOauth object. * @since  13.1 */",
    "resolution": "* @var    Registry  Options for the JLinkedinOauth object. * @since  13.1 */",
    "conflict": "* @var    Registry  Options for the JLinkedinOauth object. * @since  13.1 */"
  },
  {
    "devdecision": "Version 1",
    "id": 73162,
    "v2": "* @var JRegistry Options for the JTwitterOauth object. * @since 12.3 */",
    "resolution": "* @var    Registry  Options for the JTwitterOauth object. * @since  12.3 */",
    "conflict": "* @var    Registry  Options for the JTwitterOauth object. * @since  12.3 */"
  },
  {
    "devdecision": "Combination",
    "id": 73163,
    "v2": "* @package     Joomla.Administrator * @subpackage  com_joomlaupdate * @since       2.5.4",
    "resolution": "* @since       2.5.4 */",
    "conflict": "* @author  nikosdion <nicholas@dionysopoulos.me> * @since   2.5.4"
  },
  {
    "devdecision": "Version 1",
    "id": 73176,
    "v2": "* @var    Registry  The application configuration object. * @since  11.1 */ protected $config;  /**",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 1",
    "id": 73177,
    "v2": "* @var    Registry  The application configuration object. * @since  11.3 */ protected $config;  /**",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Manual",
    "id": 73191,
    "v2": "'username' => JRequest::getVar('username', '', 'method', 'username'), 'password' => JRequest::getVar('passwd', '', 'post', 'string', JREQUEST_ALLOWRAW), 'secretkey' => JRequest::getVar('secretkey', '', 'post', 'string', JREQUEST_ALLOWRAW),",
    "resolution": "'username' => $input->$method->get('username', '', 'USERNAME'), 'password' => $input->$method->get('passwd', '', 'RAW') 'secretkey' => $input->$method->get('secretkey', '', 'RAW'),",
    "conflict": "'username' => $input->$method->get('username', '', 'BASE64'), 'password' => $input->$method->get('passwd', '', 'STRING')"
  },
  {
    "devdecision": "Version 1",
    "id": 73231,
    "v2": "JToolbarHelper::title(JText::_('COM_CONFIG_GLOBAL_CONFIGURATION'), 'equalizer config'); JToolbarHelper::apply('application.apply'); JToolbarHelper::save('application.save');",
    "resolution": "JToolbarHelper::title(JText::_('COM_CONFIG_GLOBAL_CONFIGURATION'), 'config.png'); JToolbarHelper::apply('config.save.application.apply'); JToolbarHelper::save('config.save.application');",
    "conflict": "JToolbarHelper::title(JText::_('COM_CONFIG_GLOBAL_CONFIGURATION'), 'config.png'); JToolbarHelper::apply('config.save.application.apply'); JToolbarHelper::save('config.save.application');"
  },
  {
    "devdecision": "Version 1",
    "id": 73270,
    "v2": "// Check if the user is authorized to do this. if (!JFactory::getUser()->authorise('core.admin', 'com_config')) { $this->setRedirect('index.php', JText::_('JERROR_ALERTNOAUTHOR')); $this->redirect(); }",
    "resolution": "",
    "conflict": ""
  },
  {
    "devdecision": "Version 2",
    "id": 73309,
    "v2": "* @param   object  $object        The object for which to set the property. * @param   string  $propertyName  The name of the property to set. * @param   mixed   $value         The value to set for the property.",
    "resolution": "* @param   object  $object        The object for which to set the property. * @param   string  $propertyName  The name of the property to set. * @param   mixed   $value         The value to set for the property.",
    "conflict": "* @param   object  $object        @todo * @param   string  $propertyName  @todo * @param   mixed   $value         @todo"
  },
  {
    "devdecision": "Version 2",
    "id": 73313,
    "v2": "* @param   string   $text      The string to be escaped. * @param   boolean  $extra     Optional parameter to provide extra escaping. * @param   string   $expected  The expected result.",
    "resolution": "* @param   string   $text      The string to be escaped. * @param   boolean  $extra     Optional parameter to provide extra escaping. * @param   string   $expected  The expected result.",
    "conflict": "* @param   string   $text    The string to be escaped. * @param   boolean  $extra   Optional parameter to provide extra escaping. * @param   string   $result  The expected result."
  },
  {
    "devdecision": "Version 1",
    "id": 73315,
    "v2": "self::$driver->getExporter(), $this->isInstanceOf('JDatabaseExporterMysql'), 'Line:' . __LINE__ . ' The getExporter method should return the correct exporter.' );",
    "resolution": "self::$driver->getExporter(), $this->isInstanceOf('JDatabaseExporterMysql'), 'Line:' . __LINE__ . ' The getExporter method should return the correct exporter.');",
    "conflict": "self::$driver->getExporter(), $this->isInstanceOf('JDatabaseExporterMysql'), 'Line:' . __LINE__ . ' The getExporter method should return the correct exporter.');"
  },
  {
    "devdecision": "Version 1",
    "id": 73319,
    "v2": "$this->equalTo(array(array('title' => 'Testing'), array('title' => 'Testing2'), array('title' => 'Testing3'), array('title' => 'Testing4'))), __LINE__",
    "resolution": "$this->equalTo( array(array('title' => 'Testing'), array('title' => 'Testing2'), array('title' => 'Testing3'), array('title' => 'Testing4')) ), __LINE__",
    "conflict": "$this->equalTo( array(array('title' => 'Testing'), array('title' => 'Testing2'), array('title' => 'Testing3'), array('title' => 'Testing4')) ), __LINE__"
  },
  {
    "devdecision": "Version 2",
    "id": 73330,
    "v2": "* @param   string   $text      The string to be escaped. * @param   boolean  $extra     Optional parameter to provide extra escaping. * @param   string   $expected  The expected result.",
    "resolution": "* @param   string   $text      The string to be escaped. * @param   boolean  $extra     Optional parameter to provide extra escaping. * @param   string   $expected  The expected result.",
    "conflict": "* @param   string   $text    The string to be escaped. * @param   boolean  $extra   Optional parameter to provide extra escaping. * @param   string   $result  The expected result."
  },
  {
    "devdecision": "Version 1",
    "id": 73331,
    "v2": "self::$driver->getExporter(), $this->isInstanceOf('JDatabaseExporterMysqli'), 'Line:' . __LINE__ . ' The getExporter method should return the correct exporter.' );",
    "resolution": "self::$driver->getExporter(), $this->isInstanceOf('JDatabaseExporterMysqli'), 'Line:' . __LINE__ . ' The getExporter method should return the correct exporter.');",
    "conflict": "self::$driver->getExporter(), $this->isInstanceOf('JDatabaseExporterMysqli'), 'Line:' . __LINE__ . ' The getExporter method should return the correct exporter.');"
  },
  {
    "devdecision": "Version 1",
    "id": 73333,
    "v2": "self::$driver->getTableCreate('#__dbtest'), $this->isType('array'), 'The statement to create the table is returned in an array.' );",
    "resolution": "self::$driver->getTableCreate('#__dbtest'), $this->isType('array'), 'The statement to create the table is returned in an array.');",
    "conflict": "self::$driver->getTableCreate('#__dbtest'), $this->isType('array'), 'The statement to create the table is returned in an array.');"
  },
  {
    "devdecision": "Version 1",
    "id": 73336,
    "v2": "$this->equalTo(array(array('title' => 'Testing'), array('title' => 'Testing2'), array('title' => 'Testing3'), array('title' => 'Testing4'))), __LINE__",
    "resolution": "$this->equalTo( array(array('title' => 'Testing'), array('title' => 'Testing2'), array('title' => 'Testing3'), array('title' => 'Testing4')) ), __LINE__",
    "conflict": "$this->equalTo( array(array('title' => 'Testing'), array('title' => 'Testing2'), array('title' => 'Testing3'), array('title' => 'Testing4')) ), __LINE__"
  },
  {
    "devdecision": "Version 1",
    "id": 73345,
    "v2": "realpath($classes['shuttlechallenger']), $this->equalTo(realpath(__DIR__ . '/stubs/discover1/challenger.php')), 'Checks that the original class paths are maintained when not forced.' );",
    "resolution": "realpath($classes['shuttlechallenger']), $this->equalTo(realpath(__DIR__ . '/stubs/discover1/challenger.php')), 'Checks that the original class paths are maintained when not forced.');",
    "conflict": "realpath($classes['shuttlechallenger']), $this->equalTo(realpath(__DIR__ . '/stubs/discover1/challenger.php')), 'Checks that the original class paths are maintained when not forced.');"
  },
  {
    "devdecision": "Version 1",
    "id": 73347,
    "v2": "in_array($this->bogusFullPath, JLoader::getClassList()), $this->isTrue(), 'Tests that the BogusLoad class has been registered.' );",
    "resolution": "in_array($this->bogusFullPath, JLoader::getClassList()), $this->isTrue(), 'Tests that the BogusLoad class has been registered.');",
    "conflict": "in_array($this->bogusFullPath, JLoader::getClassList()), $this->isTrue(), 'Tests that the BogusLoad class has been registered.');"
  },
  {
    "devdecision": "Version 1",
    "id": 73348,
    "v2": "in_array('fred.php', JLoader::getClassList()), $this->isFalse(), 'Tests that a file that does not exist does not get registered.' );",
    "resolution": "in_array('fred.php', JLoader::getClassList()), $this->isFalse(), 'Tests that a file that does not exist does not get registered.');",
    "conflict": "in_array('fred.php', JLoader::getClassList()), $this->isFalse(), 'Tests that a file that does not exist does not get registered.');"
  },
  {
    "devdecision": "Version 1",
    "id": 73350,
    "v2": "$array1 = array(0 => 1, 1 => 3);",
    "resolution": "$array1 = array( 0 => 1, 1 => 3 );",
    "conflict": "$array1 = array( 0 => 1, 1 => 3 );"
  },
  {
    "devdecision": "Version 1",
    "id": 73354,
    "v2": "$this->assertThat($access->check($userId, $action, $assetId), $this->equalTo($result), $message);",
    "resolution": "$this->assertThat( $access->check($userId, $action, $assetId), $this->equalTo($result), $message );",
    "conflict": "$this->assertThat( $access->check($userId, $action, $assetId), $this->equalTo($result), $message );"
  },
  {
    "devdecision": "Version 1",
    "id": 73357,
    "v2": "$this->assertThat($access->checkGroup($groupId, $action, $assetId), $this->equalTo($result), $message);",
    "resolution": "$this->assertThat( $access->checkGroup($groupId, $action, $assetId), $this->equalTo($result), $message );",
    "conflict": "$this->assertThat( $access->checkGroup($groupId, $action, $assetId), $this->equalTo($result), $message );"
  },
  {
    "devdecision": "Version 1",
    "id": 73362,
    "v2": "$this->assertThat((string) $ObjArrayJrules, $this->equalTo($string1), 'Invalid asset uses rule from root. Line: ' . __LINE__);",
    "resolution": "$this->assertThat( (string) $ObjArrayJrules, $this->equalTo($string1), 'Invalid asset uses rule from root. Line: ' . __LINE__ );",
    "conflict": "$this->assertThat( (string) $ObjArrayJrules, $this->equalTo($string1), 'Invalid asset uses rule from root. Line: ' . __LINE__ );"
  },
  {
    "devdecision": "Version 1",
    "id": 73365,
    "v2": "$this->assertThat($access->getUsersByGroup(15, false), $this->equalTo($array2), 'No group specified. Line: ' . __LINE__);",
    "resolution": "$this->assertThat( $access->getUsersByGroup(15, false), $this->equalTo($array2), 'No group specified. Line: ' . __LINE__ );",
    "conflict": "$this->assertThat( $access->getUsersByGroup(15, false), $this->equalTo($array2), 'No group specified. Line: ' . __LINE__ );"
  },
  {
    "devdecision": "Version 1",
    "id": 73367,
    "v2": "(object) array('name' => \"core.edit.state\", 'title' => \"JACTION_EDITSTATE\", 'description' => \"JACTION_EDITSTATE_COMPONENT_DESC\")), 'Unable to get actions from the component section.'),",
    "resolution": "(object) array('name' => \"core.edit.state\", 'title' => \"JACTION_EDITSTATE\", 'description' => \"JACTION_EDITSTATE_COMPONENT_DESC\") ), 'Unable to get actions from the component section.' ),",
    "conflict": "(object) array('name' => \"core.edit.state\", 'title' => \"JACTION_EDITSTATE\", 'description' => \"JACTION_EDITSTATE_COMPONENT_DESC\") ), 'Unable to get actions from the component section.' ),"
  },
  {
    "devdecision": "Version 1",
    "id": 73380,
    "v2": "// file, class, expectsClass, (expected result array), whether there should be an exception 'Default configuration class' => array(null, null, 'JConfig', 'ConfigEval'), 'Custom file, invalid class' => array(JPATH_BASE . '/config.JCli-wrongclass.php', 'noclass', false, array(), true),",
    "resolution": "// Note: file, class, expectsClass, (expected result array), whether there should be an exception 'Default configuration class' => array(null, null, 'JConfig', 'ConfigEval'), 'Custom file, invalid class' => array(JPATH_BASE . '/config.JCli-wrongclass.php', 'noclass', false, array(), true),",
    "conflict": "// Note: file, class, expectsClass, (expected result array), whether there should be an exception 'Default configuration class' => array(null, null, 'JConfig', 'ConfigEval'), 'Custom file, invalid class' => array(JPATH_BASE . '/config.JCli-wrongclass.php', 'noclass', false, array(), true),"
  },
  {
    "devdecision": "Version 1",
    "id": 73391,
    "v2": "",
    "resolution": "* @param   string  $url       @todo * @param   string  $base      @todo * @param   string  $request   @todo * @param   string  $expected  @todo *",
    "conflict": "* @param   string  $url       @todo * @param   string  $base      @todo * @param   string  $request   @todo * @param   string  $expected  @todo *"
  },
  {
    "devdecision": "Version 1",
    "id": 73393,
    "v2": "* @covers JApplicationWeb::isSSLConnection",
    "resolution": "* Test... * * @covers JApplicationWeb::isSSLConnection * * @return void",
    "conflict": "* Test... * * @covers JApplicationWeb::isSSLConnection * * @return void"
  },
  {
    "devdecision": "Version 1",
    "id": 73443,
    "v2": "if (!empty($commands['assetgroup_id'])) { if (!$this->batchAccess($commands['assetgroup_id'], $pks, $contexts)) {",
    "resolution": "if (!empty($commands['assetgroup_id'])) { if (!$this->batchAccess($commands['assetgroup_id'], $pks, $contexts)) {",
    "conflict": "if (!empty($commands['assetgroup_id'])) { if (!$this->batchAccess($commands['assetgroup_id'], $pks, $contexts)) {"
  },
  {
    "devdecision": "Version 1",
    "id": 73444,
    "v2": "* @param int    $value     The new menu or sub-item. * @param array  $pks       An array of row IDs. * @param   array  $contexts  Not used.",
    "resolution": "* @param   integer  $value     The new menu or sub-item. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts.",
    "conflict": "* @param   integer  $value     The new menu or sub-item. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts."
  },
  {
    "devdecision": "Version 1",
    "id": 73445,
    "v2": "* @param int    $value     The new menu or sub-item. * @param array  $pks       An array of row IDs. * @param   array  $contexts  Not used.",
    "resolution": "* @param   integer  $value     The new menu or sub-item. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts.",
    "conflict": "* @param   integer  $value     The new menu or sub-item. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts."
  },
  {
    "devdecision": "Version 2",
    "id": 73446,
    "v2": "if (isset($data['rules'])) { $rules = new JAccessRules($data['rules']);",
    "resolution": "if (isset($data['rules'])) { $rules = new JAccessRules($data['rules']);",
    "conflict": "if (isset($data['rules'])) { $rules = new JRules($data['rules']);"
  },
  {
    "devdecision": "Version 1",
    "id": 73448,
    "v2": "$db = $this->getDbo(); $query = $db->getQuery(true);",
    "resolution": "$db = $this->getDbo(); $query = $db->getQuery(true);",
    "conflict": "$db = $this->getDbo(); $query = $db->getQuery(true);"
  },
  {
    "devdecision": "Version 2",
    "id": 73449,
    "v2": "else if ($active == '1') { $query->where($query->length('a.activation').' = 32');",
    "resolution": "else if ($active == '1') { $query->where($query->length('a.activation').' = 32');",
    "conflict": "elseif ($active == '1') { $query->where('LENGTH(a.activation) = 32');"
  },
  {
    "devdecision": "Version 1",
    "id": 73482,
    "v2": "* @param   integer  $value      The new value matching an Asset Group ID. * @param   array    $pks        An array of row IDs. * @param   array    $contexts   An array of item contexts.",
    "resolution": "* @param   integer  $value     The new value matching an Asset Group ID. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts.",
    "conflict": "* @param   integer  $value     The new value matching an Asset Group ID. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts."
  },
  {
    "devdecision": "Version 1",
    "id": 73484,
    "v2": "* @param   integer  $value      The new category ID. * @param   array    $pks        An array of row IDs. * @param   array    $contexts   An array of item contexts.",
    "resolution": "* @param   integer  $value     The new category ID. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts.",
    "conflict": "* @param   integer  $value     The new category ID. * @param   array    $pks       An array of row IDs. * @param   array    $contexts  An array of item contexts."
  },
  {
    "devdecision": "Combination",
    "id": 73489,
    "v2": "$token = JSession::getFormToken();",
    "resolution": "// Deprecation warning. JLog::add('JRequest::checkToken is deprecated.', JLog::WARNING, 'deprecated');  $token = JSession::getFormToken();",
    "conflict": "// Deprecation warning. JLog::add('JRequest::checkToken is deprecated.', JLog::WARNING, 'deprecated');  $token = JUtility::getToken();"
  },
  {
    "devdecision": "Version 1",
    "id": 73515,
    "v2": "",
    "resolution": "//$this->config->set('max_memory_limit', '2048M');  // We are only coupled to Document and Language in JFactory. $this->saveFactoryState();",
    "conflict": "//$this->config->set('max_memory_limit', '2048M');  // We are only coupled to Document and Language in JFactory. $this->saveFactoryState();"
  },
  {
    "devdecision": "Version 1",
    "id": 73540,
    "v2": "* Empty implementation (not required)",
    "resolution": "* Empty implementation (not required for separator) * * @return  void * * @since   11.1",
    "conflict": "* Empty implementation (not required for separator) * * @return  void * * @since   11.1"
  },
  {
    "devdecision": "Version 1",
    "id": 73546,
    "v2": "return '<input type=\"password\" name=\"' . $this->name . '\" id=\"' . $this->id . '\"' . ' value=\"' . htmlspecialchars($this->value, ENT_COMPAT, 'UTF-8') . '\"' . $auto . $class . $readonly . $disabled . $size . $maxLength . '/>'; }",
    "resolution": "return '<input type=\"password\" name=\"'.$this->name.'\" id=\"'.$this->id.'\"' . ' value=\"'.htmlspecialchars($this->value, ENT_COMPAT, 'UTF-8').'\"' . $auto.$class.$readonly.$disabled.$size.$maxLength.'/>'.$script;",
    "conflict": "return '<input type=\"password\" name=\"'.$this->name.'\" id=\"'.$this->id.'\"' . ' value=\"'.htmlspecialchars($this->value, ENT_COMPAT, 'UTF-8').'\"' . $auto.$class.$readonly.$disabled.$size.$maxLength.'/>'.$script;"
  },
  {
    "devdecision": "Manual",
    "id": 73556,
    "v2": "* @param   mixed  $actions  JSON string or array of actions *",
    "resolution": "* @param   mixed  $actions  JRule object, an array of actions or a JSON string array of actions. * * @return  void *",
    "conflict": "* @param   mixed  $actions  JRule object, an array of actions or a JSON string array of actions. * * @return  void *"
  },
  {
    "devdecision": "Combination",
    "id": 73563,
    "v2": "* * @since   11.1 * * @deprecated",
    "resolution": "* * @since   11.1 * * @deprecated     12.1",
    "conflict": "* @deprecated    12.1"
  },
  {
    "devdecision": "Manual",
    "id": 73565,
    "v2": "$tmpInstaller = new JInstaller; // create a new installer because findManifest sets stuff // look in the administrator first",
    "resolution": "// Create a new installer because findManifest sets stuff // Look in the administrator first $tmpInstaller = new JInstaller; $tmpInstaller->setPath('source', $this->parent->getPath('extension_administrator'));",
    "conflict": "// Create a new installer because findManifest sets stuff $tmpInstaller = new JInstaller(); // Look in the administrator first"
  }
]
}